{"diff": "a / local - cli / server / util / launchEditor . js \n  b / local - cli / server / util / launchEditor . js \n function getArgumentsForLineNumber ( editor , fileName , lineNumber , workspace ) { \n return addWorkspaceToArgumentsIfExists ( [ fileName + ' : ' + lineNumber ] , workspace ) ; \n case ' subl ' : \n case ' sublime ' : \n + case ' wstorm ' : \n + case ' appcode ' : \n + case ' idea ' : \n return [ fileName + ' : ' + lineNumber ] ; \n case ' joe ' : \n case ' emacs ' :", "msg": "Open to correct line on Webstorm , IntelliJ and AppCode\n"}
{"diff": "a / packages / rocketchat - lib / lib / RoomTypeConfig . js \n  b / packages / rocketchat - lib / lib / RoomTypeConfig . js \n export class RoomTypeConfig { \n return true ; \n } \n \n + canBeCreated ( ) { \n + return Meteor . isServer ? \n + RocketChat . authz . hasAtLeastOnePermission ( Meteor . userId ( ) , [ ` create - $ { this . _identifier } ` ] ) : \n + RocketChat . authz . hasAtLeastOnePermission ( [ ` create - $ { this . _identifier } ` ] ) ; \n + } \n + \n canBeDeleted ( room ) { \n return Meteor . isServer ? \n RocketChat . authz . hasAtLeastOnePermission ( Meteor . userId ( ) , [ ` delete - $ { room . t } ` ] , room . _id ) :", "msg": "Add creation validation configuration , e . g . in order to check whether the user is authorized to create the room type\n"}
{"diff": "a / lib / utils / webpack . config . js \n  b / lib / utils / webpack . config . js \n module . exports = ( program , directory , suppliedStage , webpackPort = 1500 , pages = \n / / most people don ' t navigate to most pages , take tradeoff of \n / / loading / evaling modules multiple times over loading / evaling lots \n / / of unused code on the initial opening of the app . \n - minChunks : Math . floor ( components . length / 2 ) , \n + / / \n + / / Use Math . max as there must be at least two chunks . \n + minChunks : Math . max ( 2 , Math . floor ( components . length / 2 ) ) , \n } ) , \n / / Add a few global variables . Set NODE_ENV to production ( enables \n / / optimizations for React ) and whether prefixing links is enabled", "msg": "Ensure there ' s at least two set for minChunks\n"}
{"diff": "a / demo / demo . js \n  b / demo / demo . js \n exports . launch = function ( env ) { \n addFold = true ; \n } \n } else { \n - var folds = session . getFoldsInRange ( range ) ; \n - if ( tryToUnfold & & folds . length ) \n - session . expandFolds ( folds ) ; \n - else if ( folds . length = = 1 & & folds [ 0 ] . range . compare ( range ) = = 0 ) \n - session . expandFolds ( folds ) ; \n - else \n - addFold = true ; \n + addFold = true ; \n } \n if ( addFold ) { \n var placeHolder = session . getTextRange ( range ) ;", "msg": "Fold on selection - dont expand in the demo . Otherwise it ' s hard to test nested folding\n"}
{"diff": "a / lib / router / bind . js \n  b / lib / router / bind . js \n function bindFunction ( path , fn , verb , options ) { \n sails . emit ( ' router : bind ' , { \n path : path , \n target : util . clone ( targetFn ) , \n - verb : verb \n + verb : verb , \n + originalFn : fn \n } ) ; \n \n }", "msg": "Expose original function being bound to route in router : bind event\n"}
{"diff": "a / react - sortable - mixin . js \n  b / react - sortable - mixin . js \n \n \n emitEvent = function ( / * * string * / type , / * * Event * / evt ) { \n var method = options [ type ] ; \n + if ( method & & typeof method = = = \" string \" ) { \n + method = this [ method ] ; \n + } \n method & & typeof method = = = \" function \" & & method . call ( this , evt , this . _sortableInstance ) ; \n } . bind ( this ) ;", "msg": "Allow event functions to be defined as functions AND strings .\n"}
{"diff": "a / Gruntfile . js \n  b / Gruntfile . js \n grunt . initConfig ( { \n \n { ' build / < % = pkg . name % > . css ' : [ \n ' build / base . css ' , \n + ' build / grids . css ' , \n ' build / buttons . css ' , \n ' build / forms . css ' , \n - ' build / grids . css ' , \n ' build / menus . css ' , \n ' build / tables . css ' \n ] } , \n \n { ' build / < % = pkg . name % > - nr . css ' : [ \n ' build / base . css ' , \n + ' build / grids - nr . css ' , \n ' build / buttons . css ' , \n ' build / forms - nr . css ' , \n - ' build / grids - nr . css ' , \n ' build / menus - nr . css ' , \n ' build / tables . css ' \n ] }", "msg": "Rearrange modules in pure . css rollup to : Base , Grids , etc .\n"}
{"diff": "a / lib / model . js \n  b / lib / model . js \n function convertTo_id ( val ) { \n } \n } \n if ( val . isMongooseArray ) { \n - return new MongooseArray ( val , val . _path , val . _parent ) ; \n + return val . _parent . schema . path ( val . _path ) . cast ( val , val . _parent ) ; \n } \n \n return [ ] . concat ( val ) ;", "msg": "Restored ability to override populated array caster from 4 . 6 . 2\n"}
{"diff": "a / core / server / api / canary / members . js \n  b / core / server / api / canary / members . js \n const members = { \n } , { \n name : ' labels ' , \n lookup : / labels / i \n + } , { \n + name : ' created_at ' , \n + lookup : / created_at / i \n } ] ; \n \n return fsLib . readCSV ( { \n const members = { \n subscribed : subscribed , \n stripe_customer_id : entry . stripe_customer_id , \n comped : ( String ( entry . complimentary_plan ) . toLocaleLowerCase ( ) = = = ' true ' ) , \n - labels : entryLabels \n + labels : entryLabels , \n + created_at : entry . created_at \n } ] \n } , \n options : {", "msg": "Added ` created_at ` field to accepted fields for members CSV import\n"}
{"diff": "a / packages / launch - screen / package . js \n  b / packages / launch - screen / package . js \n Package . describe ( { \n } ) ; \n \n Cordova . depends ( { \n - ' cordova - plugin - splashscreen ' : ' 3 . 0 . 0 ' \n + ' cordova - plugin - splashscreen ' : ' https : / / github . com / apache / cordova - plugin - splashscreen . git # 2e1ec329168633b39c0251ca9e1ec87d9a9483c9 ' \n } ) ; \n \n Package . onUse ( function ( api ) {", "msg": "Temporarily use cordova - plugin - splashscreen from git until new version is released\n"}
{"diff": "a / packages / babel - compiler / babel - compiler . js \n  b / packages / babel - compiler / babel - compiler . js \n BCp . processOneFileForTarget = function ( inputFile , source ) { \n \n var extraFeatures = Object . assign ( { } , this . extraFeatures ) ; \n \n + if ( inputFile . getArch ( ) . startsWith ( \" os . \" ) ) { \n + / / Start with a much simpler set of Babel presets and plugins if \n + / / we ' re compiling for Node 8 . \n + extraFeatures . nodeMajorVersion = parseInt ( process . versions . node ) ; \n + } \n + \n if ( ! extraFeatures . hasOwnProperty ( \" jscript \" ) ) { \n / / Perform some additional transformations to improve compatibility \n / / in older browsers ( e . g . wrapping named function expressions , per", "msg": "Use Babel options appropriate for Node 8 to compile server code .\n"}
{"diff": "a / src / backend / agent . js \n  b / src / backend / agent . js \n export default class Agent extends EventEmitter < { | \n ( rendererID : any ) \n ] : any ) : RendererInterface ) ; \n \n - const id = renderer . getFiberIDForNative ( node , true ) ; \n - \n - if ( id ! = = null ) { \n - return id ; \n + try { \n + const id = renderer . getFiberIDForNative ( node , true ) ; \n + if ( id ! = = null ) { \n + return id ; \n + } \n + } catch ( error ) { \n + / / Some old React versions might throw if they can ' t find a match . \n + / / If so we should ignore it . . . \n } \n } \n return null ;", "msg": "Re - add try / catch inside Agent ' s getIDForNode ( )\n"}
{"diff": "a / core / frontend / services / themes / middleware . js \n  b / core / frontend / services / themes / middleware . js \n function updateLocalTemplateOptions ( req , res , next ) { \n email : req . member . email , \n name : req . member . name , \n subscriptions : req . member . stripe . subscriptions , \n - subscribed : req . member . stripe . subscriptions . length ! = = 0 \n + paid : req . member . stripe . subscriptions . length ! = = 0 \n } : null ; \n \n hbs . updateLocalTemplateOptions ( res . locals , _ . merge ( { } , localTemplateOptions , {", "msg": "Renamed @ member . subscribed to @ member . paid\n"}
{"diff": "a / src / sound / html5 / HTML5AudioSound . js \n  b / src / sound / html5 / HTML5AudioSound . js \n var HTML5AudioSound = new Class ( { \n return true ; \n } , \n pause : function ( ) { \n - if ( this . checkTouchLocked ( ' method ' , ' pause ' ) ) { \n + if ( this . manager . isLocked ( this , ' pause ' ) ) { \n return false ; \n } \n if ( this . startTime > 0 ) {", "msg": "Using manager . isLocked instead of removed checkTouchLocked method for pause method\n"}
{"diff": "a / lib / marked . js \n  b / lib / marked . js \n marked . options = \n marked . setOptions = function ( opt ) { \n defaults = opt ; \n setOptions ( opt ) ; \n + return marked ; \n } ; \n \n marked . options ( {", "msg": "returning ' marked ' in setOptions to allow for fluent interface\n"}
{"diff": "a / v3 / src / loader / filetypes / HTML5AudioFile . js \n  b / v3 / src / loader / filetypes / HTML5AudioFile . js \n var HTML5AudioFile = new Class ( { \n audio . preload = ' auto ' ; \n audio . oncanplaythrough = this . onProgress . bind ( this ) ; \n audio . onerror = this . onError . bind ( this ) ; \n - audio . src = GetURL ( this , baseURL | | ' ' ) ; \n - audio . load ( ) ; \n \n this . data . push ( audio ) ; \n } \n + \n + for ( i = 0 ; i < this . data . length ; i + + ) \n + { \n + audio = this . data [ i ] ; \n + audio . src = GetURL ( this , baseURL | | ' ' ) ; \n + audio . load ( ) ; \n + } \n } \n \n } ) ;", "msg": "Splitting audio objects initialization and loading to make sure all event listeners are set before any file starts loading\n"}
{"diff": "a / lib / hooks / views / res . view . js \n  b / lib / hooks / views / res . view . js \n module . exports = function _addResViewMethod ( req , res , next ) { \n } \n sails . log . silly ( ' Serving view at rel path : ' , relPathToView ) ; \n sails . log . silly ( ' View root : ' , sails . config . paths . views ) ; \n - return res . render ( relPathToView , sails . config . views . engineOptions | | { } , function renderView ( err , renderedViewStr ) { \n + return res . render ( relPathToView , function renderView ( err , renderedViewStr ) { \n \n \n / / if a template error occurred , don ' t rely on any of the Sails request / response methods", "msg": "Reverse commit 2e83ed6 , since we realized we can just set sails . config . views . locals to do the same thing .\n"}
{"diff": "a / src / search / FindInFiles . js \n  b / src / search / FindInFiles . js \n define ( function ( require , exports , module ) { \n var currentEditor = EditorManager . getActiveEditor ( ) , \n initialString = currentEditor & & currentEditor . getSelectedText ( ) ; \n \n + if ( dialog & & ! dialog . closed & & dialog . hasOwnProperty ( \" modalBar \" ) & & dialog . modalBar ) { \n + / / The modalBar was already up . When creating the new modalBar , copy the \n + / / current query instead of using the passed - in selected text . \n + initialString = dialog . getDialogTextField ( ) . val ( ) ; \n + dialog . modalBar . close ( true , false ) ; \n + } \n + \n dialog = new FindInFilesDialog ( ) ; \n searchResults = { } ; \n currentStart = 0 ;", "msg": "Set focus to input field when hitting Find In Files when it is already open\n"}
{"diff": "a / lib / Interactor . js \n  b / lib / Interactor . js \n var Interact = { \n console . log ( ' Connecting to local PM2 ' ) ; \n \n ipm2a . on ( ' ready ' , function ( ) { \n - debug ( ' Succesfully connected to local PM2 ' ) ; \n + console . log ( ' Succesfully connected to local PM2 ' ) ; \n / * * \n * Forward all events to remote \n * / \n var Interact = { \n } ) ; \n \n ipm2a . on ( ' reconnecting ' , function ( ) { \n - debug ( ' Disconnected from PM2 - Reconnecting ' ) ; \n + console . error ( ' Disconnected from PM2 - Reconnecting ' ) ; \n Interact . stop_workers ( ) ; \n ipm2a . removeAllListeners ( ) ; \n ipm2a . disconnect ( ) ;", "msg": "Display successfull / failure connection in interactor . log\n"}
{"diff": "a / src / definitions / modules / dropdown . js \n  b / src / definitions / modules / dropdown . js \n $ . fn . dropdown = function ( parameters ) { \n ? callback \n : function ( ) { } \n ; \n - if ( module . can . show ( ) & & ! module . is . active ( ) & & ! module . is . allFiltered ( ) ) { \n + if ( module . is . searchSelection ( ) & & module . is . allFiltered ( ) ) { \n + return ; \n + } \n + if ( module . can . show ( ) & & ! module . is . active ( ) ) { \n module . debug ( ' Showing dropdown ' ) ; \n module . animate . show ( function ( ) { \n if ( module . can . click ( ) ) {", "msg": "Show filtered menu if search input placed in menu .\n"}
{"diff": "a / lib / plugins / aws / package / compile / events / cognitoUserPool / index . js \n  b / lib / plugins / aws / package / compile / events / cognitoUserPool / index . js \n class AwsCompileCognitoUserPoolEvents { \n const lambdaLogicalId = this . provider . naming . getLambdaLogicalId ( value . functionName ) ; \n \n / / Return a new object to avoid lint errors \n - return Object . assign ( { } , result , { [ value . triggerSource ] : lambdaLogicalId } ) ; \n + return Object . assign ( { } , result , { \n + [ value . triggerSource ] : { \n + ' Fn : : GetAtt ' : [ \n + lambdaLogicalId , \n + ' Arn ' , \n + ] , \n + } , \n + } ) ; \n } , { } ) ; \n \n const userPoolLogicalId = this . provider . naming . getCognitoUserPoolLogicalId ( poolName ) ;", "msg": "Use Lambda logical ID to retrieve its ' ARN\n"}
{"diff": "a / src / command / KeyBindingManager . js \n  b / src / command / KeyBindingManager . js \n define ( function ( require , exports , module ) { \n right = right . trim ( ) . toLowerCase ( ) ; \n var matched = ( left . length > 0 & & left = = = right ) ; \n if ( matched & & previouslyFound ) { \n - console . log ( \" KeyBindingManager normalizeKeyDescriptorString ( ) - Modifier defined twice : \" + origDescriptor ) ; \n + console . log ( \" KeyBindingManager normalizeKeyDescriptorString ( ) - Modifier \" + left + \" defined twice : \" + origDescriptor ) ; \n } \n return matched ; \n } \n \n origDescriptor . split ( \" - \" ) . forEach ( function parseDescriptor ( ele , i , arr ) { \n - if ( _compareModifierString ( \" ctrl \" , ele , hasCtrl ) ) { \n + if ( _compareModifierString ( \" ctrl \" , ele , hasCtrl , origDescriptor ) ) { \n if ( brackets . platform = = = \" mac \" ) { \n hasMacCtrl = true ; \n } else {", "msg": "Improved error message when trying to use a modifier twice in a shortcut\n"}
{"diff": "a / lib / God . js \n  b / lib / God . js \n God . prepare = function prepare ( env , cb ) { \n env . instances = 1 ; \n } \n \n - async . times ( env . instances , function ( n , next ) { \n + async . timesLimit ( env . instances , 1 , function ( n , next ) { \n env . vizion_running = false ; \n if ( env . env & & env . env . vizion_running ) { \n env . env . vizion_running = false ; \n } \n \n - God . injectVariables ( env , function inject ( _err , proc ) { \n - return God . executeApp ( Utility . clone ( proc ) , function ( err , clu ) { \n + God . injectVariables ( env , function inject ( err , _env ) { \n + if ( err ) return next ( err ) ; \n + return God . executeApp ( Utility . clone ( _env ) , function ( err , clu ) { \n if ( err ) return next ( err ) ; \n God . notify ( ' start ' , clu , true ) ; \n / / here call next wihtout an array because", "msg": "( god ) launch one by one to avoid race condition\n"}
{"diff": "a / src / js / contentscript . js \n  b / src / js / contentscript . js \n vAPI . injectScriptlet = function ( doc , text ) { \n const PSelectorSpathTask = class { \n constructor ( task ) { \n this . spath = task [ 1 ] ; \n + this . nth = / ^ ( ? : \\ s * [ + ~ ] | : ) / . test ( this . spath ) ; \n } \n - transpose ( node , output ) { \n + qsa ( node ) { \n + if ( this . nth = = = false ) { \n + return node . querySelectorAll ( this . spath ) ; \n + } \n const parent = node . parentElement ; \n if ( parent = = = null ) { return ; } \n let pos = 1 ; \n vAPI . injectScriptlet = function ( doc , text ) { \n if ( node = = = null ) { break ; } \n pos + = 1 ; \n } \n - const nodes = parent . querySelectorAll ( \n + return parent . querySelectorAll ( \n ` : scope > : nth - child ( $ { pos } ) $ { this . spath } ` \n ) ; \n + } \n + transpose ( node , output ) { \n + const nodes = this . qsa ( node ) ; \n + if ( nodes = = = undefined ) { return ; } \n for ( const node of nodes ) { \n output . push ( node ) ; \n }", "msg": "Allow ` : upward ( ) ` operator to select ` html ` element\n"}
{"diff": "a / tools / cordova / cordova - runner . js \n  b / tools / cordova / cordova - runner . js \n export default class CordovaRunner { \n constructor ( projectContext , cordovaProject , options ) { \n this . projectContext = projectContext ; \n this . cordovaProject = cordovaProject ; \n - \n this . options = options ; \n - this . title = ` app on $ { this . displayName } ` ; \n + } \n + \n + get title ( ) { \n + return ` app on $ { this . displayName } ` ; \n } \n \n prestart ( ) {", "msg": "Don ' t access displayName before subclasses have been initialized\n"}
{"diff": "a / lib / transports / websocket / hybi - 07 - 12 . js \n  b / lib / transports / websocket / hybi - 07 - 12 . js \n function WebSocket ( mng , data , req ) { \n } ) ; \n this . parser . on ( ' ping ' , function ( ) { \n / / version 8 ping = > pong \n - this . socket . write ( ' \\ u008a \\ u0000 ' ) ; \n + self . socket . write ( ' \\ u008a \\ u0000 ' ) ; \n } ) ; \n this . parser . on ( ' close ' , function ( ) { \n self . end ( ) ; \n } ) ; \n - this . parser . on ( ' error ' , function ( ) { \n + this . parser . on ( ' error ' , function ( reason ) { \n + self . log . warn ( self . name + ' parser error : ' + reason ) ; \n self . end ( ) ; \n } ) ;", "msg": "corrected ping handling from websocket transport , and added warning output on parser error\n"}
{"diff": "a / test / test . js \n  b / test / test . js \n \n QUnit . test ( ' should create a wrapped function ' , function ( assert ) { \n assert . expect ( 1 ) ; \n \n - var p = _ . wrap ( _ . escape , function ( func , text ) { \n + var p = _ . wrap ( lodashStable . escape , function ( func , text ) { \n return ' < p > ' + func ( text ) + ' < / p > ' ; \n } ) ; \n \n \n QUnit . test ( ' should use ` this ` binding of function ' , function ( assert ) { \n assert . expect ( 1 ) ; \n \n - var p = _ . wrap ( _ . escape , function ( func ) { \n + var p = _ . wrap ( lodashStable . escape , function ( func ) { \n return ' < p > ' + func ( this . text ) + ' < / p > ' ; \n } ) ;", "msg": "Use ` lodashStable . escape ` in more places .\n"}
{"diff": "a / Libraries / ReactNative / renderApplication . js \n  b / Libraries / ReactNative / renderApplication . js \n \n \n const AppContainer = require ( ' AppContainer ' ) ; \n const React = require ( ' React ' ) ; \n - const ReactFabric = require ( ' ReactFabric ' ) ; \n - const ReactNative = require ( ' ReactNative ' ) ; \n \n const invariant = require ( ' fbjs / lib / invariant ' ) ; \n \n function renderApplication < Props : Object > ( \n } \n \n if ( fabric ) { \n - ReactFabric . render ( renderable , rootTag ) ; \n + require ( ' ReactFabric ' ) . render ( renderable , rootTag ) ; \n } else { \n - ReactNative . render ( renderable , rootTag ) ; \n + require ( ' ReactNative ' ) . render ( renderable , rootTag ) ; \n } \n }", "msg": "Load ' ReactFabric ' only when it is required to render a Fabric component\n"}
{"diff": "a / src / dom / index . js \n  b / src / dom / index . js \n export function getAccessor ( node , name , value , cache ) { \n * / \n export function setAccessor ( node , name , value ) { \n if ( name = = = ' class ' ) { \n - node . className = value ; \n + node . className = value | | ' ' ; \n } \n else if ( name = = = ' style ' ) { \n - node . style . cssText = value ; \n + node . style . cssText = value | | ' ' ; \n } \n else if ( name = = = ' dangerouslySetInnerHTML ' ) { \n node . innerHTML = value . __html ;", "msg": "Coerce falsey ` className ` and ` style ` values to an empty string to avoid ` class = \" null \" ` and ` style = \" null \" ` .\n"}
{"diff": "a / lib / codemirror . js \n  b / lib / codemirror . js \n window . CodeMirror = ( function ( ) { \n } \n } else { \n var match = this . string . slice ( this . pos ) . match ( pattern ) ; \n + if ( match & & match . index > 0 ) return null ; \n if ( match & & consume ! = = false ) this . pos + = match [ 0 ] . length ; \n return match ; \n }", "msg": "Make StringStream . match return null when the match isn ' t at current position\n"}
{"diff": "a / packages / meteor / helpers . js \n  b / packages / meteor / helpers . js \n _ . extend ( Meteor , { \n var callback ; \n var fut ; \n var newArgs = Array . prototype . slice . call ( arguments ) ; \n - if ( newArgs . length & & \n - typeof ( newArgs [ newArgs . length - 1 ] ) = = = \" function \" ) { \n + var haveCb = newArgs . length & & \n + ( newArgs [ newArgs . length - 1 ] instanceof Function ) ; \n + if ( Meteor . isClient & & ! haveCb ) { \n + newArgs . push ( function ( ) { } ) ; \n + haveCb = true ; \n + } \n + if ( haveCb ) { \n var origCb = newArgs [ newArgs . length - 1 ] ; \n callback = Meteor . bindEnvironment ( origCb , function ( e ) { \n Meteor . _debug ( \" Exception in callback of async function \" , e . stack ) ; \n _ . extend ( Meteor , { \n newArgs [ newArgs . length ] = fut . resolver ( ) ; \n } \n fn . apply ( self , newArgs ) ; \n - if ( fut ) \n + if ( ! haveCb ) \n return fut . wait ( ) ; \n } ; \n }", "msg": "Use a noop callback if client code doesn ' t provide one\n"}
{"diff": "a / examples / todos / client / templates / app - body . js \n  b / examples / todos / client / templates / app - body . js \n Template . appBody . onRendered ( function ( ) { \n . hide ( ) \n . insertBefore ( next ) \n . fadeIn ( function ( ) { \n - listFadeInHold . release ( ) ; \n + if ( listFadeInHold ) { \n + listFadeInHold . release ( ) ; \n + } \n } ) ; \n } , \n removeElement : function ( node ) { \n Template . appBody . events ( { \n \n ' click . js - logout ' : function ( ) { \n Meteor . logout ( ) ; \n - \n + \n / / if we are on a private list , we ' ll need to go to a public one \n var current = Router . current ( ) ; \n if ( current . route . name = = = ' listsShow ' & & current . data ( ) . userId ) {", "msg": "Don ' t release the hold if it doesn ' t exist\n"}
{"diff": "a / lib / app / index . js \n  b / lib / app / index . js \n function Sails ( ) { \n / / TODO : defer this to the http and sockets hooks - - use sails . emit ( ' lowering ' ) \n / / Shut down Socket server \n / / wait for all attached servers to stop \n + sails . emit ( ' lower ' ) ; \n var log = sails . log . verbose ; \n \n async . series ( [ \n function Sails ( ) { \n for ( var key in sails . _events ) { \n sails . removeAllListeners ( key ) ; \n } \n + process . removeAllListeners ( ) ; \n cb ( ) ; \n } \n ] , cb ) ;", "msg": "Emit ' lower ' event upon lowering , and remove all process listeners\n"}
{"diff": "a / core / frontend / apps / private - blogging / lib / middleware . js \n  b / core / frontend / apps / private - blogging / lib / middleware . js \n const privateBlogging = { \n \n return session ( { \n maxAge : constants . ONE_MONTH_MS , \n - signed : false \n + signed : false , \n + sameSite : ' none ' \n } ) ( req , res , next ) ; \n } ,", "msg": "\ud83d\udc1b Fixed \" View site \" not logging into private sites with separate admin domains\n"}
{"diff": "a / tools / run - all . js \n  b / tools / run - all . js \n _ . extend ( Runner . prototype , { \n if ( ! self . stopped & & ! self . quiet ) { \n runLog . log ( \" \" ) ; \n runLog . log ( \" App running at : \" + self . rootUrl , { arrow : true } ) ; \n + \n + if ( process . platform = = = \" win32 \" ) { \n + runLog . log ( \" Type Control - C twice to stop . \" ) ; \n + } \n } \n \n if ( self . selenium & & ! self . stopped ) {", "msg": "Add special directions for killing the server on Windows\n"}
{"diff": "a / lib / hooks / http / index . js \n  b / lib / hooks / http / index . js \n module . exports = function ( sails ) { \n / / Merge in legacy ` sails . config . express ` object for backwards - compat . \n sails . util . defaultsDeep ( sails . config . http , sails . config . express | | { } ) ; \n \n + / / If no custom middlrware order is specified , make sure the default one is used . \n + / / This lets you override default middleware without having to explicitly include the \n + / / \" order \" array in your http . js config file . \n + sails . config . http . middleware . order = sails . config . middleware . order | | sails . hooks . http . defaults ( sails . config ) . http . middleware . order ; \n + \n } ,", "msg": "Allow default middleware order to be used when custom middleware is specified .\n"}
{"diff": "a / Libraries / Lists / ListView / ListViewDataSource . js \n  b / Libraries / Lists / ListView / ListViewDataSource . js \n class ListViewDataSource { \n * this function as the ` dataBlob ` . \n * / \n cloneWithRows ( \n - dataBlob : Array < any > | { [ key : string ] : any } , \n - rowIdentities : ? Array < string > \n + dataBlob : $ ReadOnlyArray < any > | { + [ key : string ] : any } , \n + rowIdentities : ? $ ReadOnlyArray < string > \n ) : ListViewDataSource { \n - var rowIds = rowIdentities ? [ rowIdentities ] : null ; \n + var rowIds = rowIdentities ? [ [ . . . rowIdentities ] ] : null ; \n if ( ! this . _sectionHeaderHasChanged ) { \n this . _sectionHeaderHasChanged = ( ) = > false ; \n }", "msg": "Flow type improvements to accept co - variant types\n"}
{"diff": "a / v3 / src / sound / html5 / HTML5AudioSoundManager . js \n  b / v3 / src / sound / html5 / HTML5AudioSoundManager . js \n var HTML5AudioSoundManager = new Class ( { \n Extends : BaseSoundManager , \n initialize : function HTML5AudioSoundManager ( game ) { \n this . onBlurPausedSounds = [ ] ; \n + this . _mute = false ; \n BaseSoundManager . call ( this , game ) ; \n } , \n add : function ( key , config ) {", "msg": "Initializing _mute property used for storing global mute setting\n"}
{"diff": "a / lib / plugins / aws / remove / lib / stack . js \n  b / lib / plugins / aws / remove / lib / stack . js \n const BbPromise = require ( ' bluebird ' ) ; \n module . exports = { \n remove ( ) { \n this . serverless . cli . log ( ' Removing Stack . . . ' ) ; \n - const stackName = ` $ { this . serverless . service . service } - $ { this . options . stage } ` ; \n + const stackName = this . provider . naming . getStackName ( ) ; \n const params = { \n StackName : stackName , \n } ;", "msg": "Use naming . getStackName method instead of hardcoding .\n"}
{"diff": "a / test / spec / LanguageManager - test . js \n  b / test / spec / LanguageManager - test . js \n define ( function ( require , exports , module ) { \n \" id \" : \" html \" , \n \" name \" : \" HTML \" , \n \" mode \" : [ \" htmlmixed \" , \" text / x - brackets - html \" ] , \n - \" fileExtensions \" : [ \" html \" , \" htm \" , \" shtm \" , \" shtml \" , \" xhtml \" , \" cfm \" , \" cfml \" , \" cfc \" , \" dhtml \" , \" xht \" ] , \n + \" fileExtensions \" : [ \" html \" , \" htm \" , \" shtm \" , \" shtml \" , \" xhtml \" , \" cfm \" , \" cfml \" , \" cfc \" , \" dhtml \" , \" xht \" , \" tpl \" , \" twig \" ] , \n \" blockComment \" : { prefix : \" < ! - - \" , suffix : \" - - > \" } \n } ;", "msg": "update HTML file extensions for smarty and twig file extensions\n"}
{"diff": "a / lib / internal / initialParams . js \n  b / lib / internal / initialParams . js \n import rest from ' lodash / rest ' ; \n export default function ( fn ) { \n return rest ( function ( args / * . . . , callback * / ) { \n var callback = args . pop ( ) ; \n - fn ( args , callback ) ; \n + fn . call ( this , args , callback ) ; \n } ) ; \n }", "msg": "explicitly bind ' this ' , curried by lodash ' s rest method , to the wrapped method before invoking\n"}
{"diff": "a / packages / accounts - base / accounts_common . js \n  b / packages / accounts - base / accounts_common . js \n if ( ! Accounts . _options ) { \n / / - forbidClientAccountCreation { Boolean } \n / / Do not allow clients to create accounts directly . \n Accounts . config = function ( options ) { \n - Accounts . _options = options ; \n + _ . each ( [ \" sendConfirmationEmail \" , \" forbidClientAccountCreation \" ] , function ( key ) { \n + if ( key in options ) { \n + if ( key in Accounts . _options ) \n + throw new Error ( \" Can ' t set ` \" + key + \" ` more than once \" ) ; \n + else \n + Accounts . _options [ key ] = options [ key ] ; \n + } \n + } ) ; \n } ; \n \n / / Users table . Don ' t use the normal autopublish , since we want to hide", "msg": "Allow multiple calls to Accounts . config without overriding settings\n"}
{"diff": "a / spec / main - process / atom - application . test . js \n  b / spec / main - process / atom - application . test . js \n describe ( ' AtomApplication ' , function ( ) { \n const [ window ] = await atomApplication . launch ( parseCommandLine ( [ ' - - wait ' , ' - - pid ' , ' 101 ' , projectDir ] ) ) \n await focusWindow ( window ) \n \n - const [ reusedWindow ] = await atomApplication . launch ( parseCommandLine ( [ ' - - wait ' , ' - - pid ' , ' 102 ' , filePath1 , filePath2 ] ) ) \n + const [ reusedWindow ] = await atomApplication . launch ( parseCommandLine ( [ ' - - add ' , ' - - wait ' , ' - - pid ' , ' 102 ' , filePath1 , filePath2 ] ) ) \n assert . equal ( reusedWindow , window ) \n \n const activeEditorPath = await evalInWebContents ( window . browserWindow . webContents , send = > {", "msg": "Adjust tests to use - - add when necessary\n"}
{"diff": "a / src / LiveDevelopment / LiveDevelopment . js \n  b / src / LiveDevelopment / LiveDevelopment . js \n define ( function LiveDevelopment ( require , exports , module ) { \n } \n retryCount + + ; \n \n - if ( ! browserStarted ) { \n + if ( ! browserStarted & & exports . status ! = = - 1 ) { \n NativeApp . openLiveBrowser ( \n doc . root . url \n )", "msg": "Don ' t try to start the browser if an error occurred .\n"}
{"diff": "a / packages / ember - handlebars / lib / views / metamorph_view . js \n  b / packages / ember - handlebars / lib / views / metamorph_view . js \n var DOMManager = { \n view . invalidateRecursively ( ' element ' ) ; \n view . _notifyWillInsertElement ( ) ; \n morph . replaceWith ( buffer . string ( ) ) ; \n - view . transitionTo ( ' inDOM ' ) ; \n + view . transitionTo ( ' hasElement . inDOM ' ) ; \n view . _notifyDidInsertElement ( ) ; \n } ) ; \n } ,", "msg": "Correct state transition name to reflect StateMachine state nesting .\n"}
{"diff": "a / lib / ace / editor . js \n  b / lib / ace / editor . js \n var Editor = function ( renderer , session ) { \n \n oldSession & & oldSession . _signal ( \" changeEditor \" , { oldEditor : this } ) ; \n session & & session . _signal ( \" changeEditor \" , { editor : this } ) ; \n + \n + if ( session & & session . bgTokenizer ) \n + session . bgTokenizer . scheduleStart ( ) ; \n } ; \n \n / * *", "msg": "start bgTokenizer worker in case session was changed outside of an editor\n"}
{"diff": "a / script / lib / notarize - on - mac . js \n  b / script / lib / notarize - on - mac . js \n module . exports = async function ( packagedAppPath ) { \n appleIdPassword : appleIdPassword \n } ) ; \n } catch ( e ) { \n - throw new Error ( e ) ; \n + / / throw new Error ( e ) ; \n } \n } ;", "msg": "allow build to continue if notarization failed for testing pruposes only\n"}
{"diff": "a / src / internal / utils . js \n  b / src / internal / utils . js \n export function check ( value , predicate , error ) { \n } \n } \n \n + const hasOwnProperty = Object . prototype . hasOwnProperty \n + export function hasProperty ( object , property ) { \n + return is . notUndef ( object ) & & hasOwnProperty . call ( object , property ) \n + } \n + \n export const is = { \n undef : v = > v = = = null | | v = = = undefined , \n notUndef : v = > v ! = = null & & v ! = = undefined , \n export const is = { \n pattern : pat = > pat & & ( ( typeof pat = = = ' string ' ) | | ( typeof pat = = = ' symbol ' ) | | is . func ( pat ) | | is . array ( pat ) ) , \n channel : ch = > ch & & is . func ( ch . take ) & & is . func ( ch . close ) , \n helper : it = > it & & it [ HELPER ] , \n - stringableFunc : f = > is . func ( f ) & & f . hasOwnProperty ( ' toString ' ) \n + stringableFunc : f = > is . func ( f ) & & hasProperty ( f , ' toString ' ) \n } \n \n export function remove ( array , item ) {", "msg": "Added hasProperty helper to safely check object . hasOwnProperty\n"}
{"diff": "a / src / project / ProjectManager . js \n  b / src / project / ProjectManager . js \n define ( function ( require , exports , module ) { \n * / \n function _fileViewControllerChange ( ) { \n actionCreator . setFocused ( _hasFileSelectionFocus ( ) ) ; \n + $ projectTreeContainer . trigger ( \" scroll \" ) ; \n } \n \n / * *", "msg": "Ensure that the selection marker is drawn in the right place . . .\n"}
{"diff": "new file mode 100644 \n index 00000000000 . . c9335fd6891 \n  / dev / null \n  b / server / startup / migrations / v064 . js \n \n + RocketChat . Migrations . add ( { \n + version : 64 , \n + up : function ( ) { \n + RocketChat . models . Messages . find ( { ' t ' : ' room_changed_topic ' , ' msg ' : / < / } , { msg : 1 } ) . forEach ( function ( message ) { \n + let msg = s . escapeHTML ( message . msg ) ; \n + RocketChat . models . Message . update ( { _id : message . _id } , { $ set : { msg : msg } } ) ; \n + } ) ; \n + } \n + } ) ;", "msg": "Add migration to escape old room topic changed messages\n"}
{"diff": "a / src / js / cosmetic - filtering . js \n  b / src / js / cosmetic - filtering . js \n FilterContainer . prototype . skipGenericCompiledContent = function ( lineIter ) { \n continue ; \n } \n \n - fieldIter . first ( line ) ; \n - field0 = fieldIter . next ( ) ; \n + field0 = fieldIter . first ( line ) ; \n field1 = fieldIter . next ( ) ; \n \n / / h [ \\ v ] hash [ \\ v ] example . com [ \\ v ] . promoted - tweet \n FilterContainer . prototype . skipCompiledContent = function ( lineIter ) { \n continue ; \n } \n \n - fieldIter . first ( line ) ; \n - field0 = fieldIter . next ( ) ; \n + field0 = fieldIter . first ( line ) ; \n \n / / js [ \\ v ] hash [ \\ v ] example . com [ \\ v ] script : contains ( . . . ) \n / / js [ \\ v ] hash [ \\ v ] example . com [ \\ v ] script : inject ( . . . )", "msg": "fix regression reported at http : / / forums . mozillazine . org / viewtopic . php ? p = 14748380 # p14748380\n"}
{"diff": "a / lodash . js \n  b / lodash . js \n \n var reInterpolateDelimiter = / < % = ( [ \\ s \\ S ] + ? ) % > / g ; \n \n / * * Used to detect if a method is native * / \n - var reNative = / \\ { \\ s * \\ [ native code \\ ] \\ s * \\ } / ; \n + var reNative = RegExp ( ' ^ ' + ( { } . valueOf + ' ' ) \n + . replace ( / [ . * + ? ^ = ! : $ { } ( ) | [ \\ ] \\ / \\ \\ ] / g , ' \\ \\ $ & ' ) \n + . replace ( / valueOf / g , ' . + ? ' ) + ' $ ' ) \n \n / * * Used to match tokens in template text * / \n var reToken = / __token__ ( \\ d + ) / g ;", "msg": "Implement a more robust native function detection . [ Krinkle ]\n"}
{"diff": "a / tools / commands - cordova . js \n  b / tools / commands - cordova . js \n _ . extend ( Android . prototype , { \n \n getAndroidBundlePath : function ( ) { \n / / XXX : Support USE_GLOBAL_ADK \n - return path . join ( files . getCurrentToolsDir ( ) , ' android_bundle ' ) ; \n + \n + / / XXX XXX is this right ? \n + if ( files . usesWarehouse ( ) ) \n + return path . join ( tropo . root , ' android_bundle ' ) ; \n + else \n + return path . join ( files . getCurrentToolsDir ( ) , ' android_bundle ' ) ; \n } , \n \n runAndroidTool : function ( args , options ) {", "msg": "Use the right path to android bundle when running from a release .\n"}
{"diff": "a / packages / container / lib / container . js \n  b / packages / container / lib / container . js \n Container . prototype = { \n function wrapManagerInDeprecationProxy ( manager ) { \n if ( HAS_NATIVE_PROXY ) { \n let validator = { \n - get ( obj , prop ) { \n - if ( prop ! = = ' class ' & & prop ! = = ' create ' ) { \n - throw new Error ( ` You attempted to access \" $ { prop } \" on a factory manager created by container # factoryFor . \" $ { prop } \" is not a member of a factory manager . \" ` ) ; \n - } \n - \n - return obj [ prop ] ; \n - } , \n set ( obj , prop , value ) { \n throw new Error ( ` You attempted to set \" $ { prop } \" on a factory manager created by container # factoryFor . A factory manager is a read - only construct . ` ) ; \n }", "msg": "[ BUGFIX ] Improve fastboot debugger / repl experience\n"}
{"diff": "a / tasks / build . js \n  b / tasks / build . js \n var \n \n / / config \n config = require ( ' . / config / user ' ) , \n - runSequence = require ( ' run - sequence ' ) , \n install = require ( ' . / config / project / install ' ) \n ; \n \n module . exports = function ( callback ) { \n return ; \n } \n \n - var tasks = [ ] ; \n - \n / / check for right - to - left ( RTL ) language \n if ( config . rtl = = ' both ' ) { \n - tasks . push ( ' build - rtl ' ) ; \n + gulp . start ( ' build - rtl ' ) ; \n } \n if ( config . rtl = = = true | | config . rtl = = = ' Yes ' ) { \n gulp . start ( ' build - rtl ' ) ; \n return ; \n } \n \n - tasks . push ( ' build - javascript ' ) ; \n - tasks . push ( ' build - css ' ) ; \n - tasks . push ( ' build - assets ' ) ; \n + gulp . start ( ' build - javascript ' ) ; \n + gulp . start ( ' build - css ' ) ; \n + gulp . start ( ' build - assets ' ) ; \n + \n \n - runSequence ( tasks , callback ) ; \n } ;", "msg": "Revert \" Fix callback return from build task \"\n"}
{"diff": "a / packages / meteor / dynamics_nodejs . js \n  b / packages / meteor / dynamics_nodejs . js \n Meteor . bindEnvironment = function ( func , onException , _this ) { \n / / note : callback - hook currently relies on the fact that if onException \n / / throws and you were originally calling the wrapped callback from \n / / within a Fiber , the wrapped call throws . \n - onException ( e ) ; \n + onException ( e . stack | | e . message ) ; \n } finally { \n Fiber . current . _meteor_dynamics = savedValues ; \n }", "msg": "Improved error reporting by adding stack trace to output\n"}
{"diff": "a / packages / standard - minifier - css / plugin / minify - css . js \n  b / packages / standard - minifier - css / plugin / minify - css . js \n var mergeCss = Profile ( \" mergeCss \" , function ( css ) { \n / / Add the contents of the input files to the source map of the new file \n stringifiedCss . map . sourcesContent = \n stringifiedCss . map . sources . map ( function ( filename ) { \n - return originals [ filename ] . getContentsAsString ( ) ; \n + const file = originals [ filename ] | | null ; \n + return file & & file . getContentsAsString ( ) ; \n } ) ; \n \n / / Compose the concatenated file ' s source map with source maps from the", "msg": "Use null for sourcesContent [ i ] if sources [ i ] unrecognized .\n"}
{"diff": "a / src / core / jpg . js \n  b / src / core / jpg . js \n var JpegImage = ( function JpegImageClosure ( ) { \n var node = tree ; \n while ( true ) { \n node = node [ readBit ( ) ] ; \n - if ( typeof node = = = \" number \" ) { \n - return node ; \n - } \n - if ( typeof node ! = = \" object \" ) { \n - throw new JpegError ( \" invalid huffman sequence \" ) ; \n + switch ( typeof node ) { \n + case \" number \" : \n + return node ; \n + case \" object \" : \n + continue ; \n } \n + throw new JpegError ( \" invalid huffman sequence \" ) ; \n } \n }", "msg": "Make the ` decodeHuffman ` function , in ` src / core / jpg . js ` , slightly more efficient\n"}
{"diff": "a / lib / hooks / views / consolidate . js \n  b / lib / hooks / views / consolidate . js \n module . exports = function ( sailsAppPath ) { \n if ( ! engine ) { \n var ECT = require ( sailsAppPath + ' / ect ' ) ; \n engine = requires . ect = new ECT ( { \n - root : sailsAppPath + \" / . . / views \" , \n + root : sails . config . paths . views , \n ext : \" . ect \" \n } ) ; \n }", "msg": "More correct root path for ect template engine .\n"}
{"diff": "a / src / tilemaps / mapdata / LayerData . js \n  b / src / tilemaps / mapdata / LayerData . js \n var LayerData = new Class ( { \n * An array of the tile indexes \n * \n * @ name Phaser . Tilemaps . LayerData # data \n - * @ type { ( number [ ] ) } \n + * @ type { Array . < Array . < Phaser . Tilemaps . Tile > > } \n * @ since 3 . 0 . 0 \n * / \n this . data = GetFastValue ( config , ' data ' , [ ] ) ;", "msg": "Correct type for Phaser . Tilemaps . LayerData # data\n"}
{"diff": "a / request . js \n  b / request . js \n Request . prototype . multipart = function ( multipart ) { \n \n multipart . forEach ( function ( part ) { \n var body = part . body \n - if ( typeof body = = = ' undefined ' ) throw Error ( ' Body attribute missing in multipart . ' ) \n + if ( typeof body = = = ' undefined ' ) throw new Error ( ' Body attribute missing in multipart . ' ) \n delete part . body \n var preamble = ' - - ' + self . boundary + ' \\ r \\ n ' \n Object . keys ( part ) . forEach ( function ( key ) { \n Request . defaultProxyHeaderWhiteList = \n defaultProxyHeaderWhiteList . slice ( ) \n \n \n - module . exports = Request \n \\ No newline at end of file \n + module . exports = Request", "msg": "Missing ` new ` operator when creating and throwing a new error\n"}
{"diff": "a / lib / app / lift . js \n  b / lib / app / lift . js \n module . exports = function lift ( configOverride , done ) { \n done = done | | function defaultCallback ( err ) { \n if ( err ) { \n sails . log . error ( ' Failed to lift app : ' , err ) ; \n - sails . log . error ( ' ( You are seeing the above error message because no custom callback was programmatically provided to ` . lift ( ) ` . ) ' ) ; \n + sails . log . silly ( ' ( You are seeing the above error message because no custom callback was programmatically provided to ` . lift ( ) ` . ) ' ) ; \n return ; \n }", "msg": "Change ' lift failed ' message suffix to only log in ' silly ' mode , to avoid confusion\n"}
{"diff": "a / src / core / ScaleManager . js \n  b / src / core / ScaleManager . js \n Phaser . ScaleManager . prototype = { \n else if ( this . _scaleMode = = = Phaser . ScaleManager . EXACT_FIT | | this . _scaleMode = = = Phaser . ScaleManager . SHOW_ALL ) \n { \n this . refresh ( ) ; \n - this . checkOrientationState ( ) ; \n \n if ( this . onResize ) \n { \n Phaser . ScaleManager . prototype = { \n } \n } \n \n + this . checkOrientationState ( ) ; \n + \n } , \n \n / * *", "msg": "Allowed the orientation checks to still work when using RESIZE scale mode .\n"}
{"diff": "a / core / server / services / bulk - email / index . js \n  b / core / server / services / bulk - email / index . js \n module . exports = { \n from : fromAddress , \n ' recipient - variables ' : recipientData \n } ) ; \n + \n + if ( config . mailgun . tag ) { \n + Object . assign ( messageData , { \n + ' o : tag ' : config . mailgun . tag \n + } ) ; \n + } \n + \n await mailgunInstance . messages ( ) . send ( messageData ) ; \n } catch ( err ) { \n common . logging . error ( { err } ) ;", "msg": "Added tagging support to bul email service ( )\n"}
{"diff": "a / src / component . js \n  b / src / component . js \n export default function Component ( props , context ) { \n / * * @ private * / \n this . _renderCallbacks = [ ] ; \n / * * @ public * / \n - this . prevState = this . prevProps = this . prevContext = this . base = null ; \n + this . prevState = this . prevProps = this . prevContext = this . base = this . _parentComponent = this . _component = null ; \n / * * @ public * / \n this . context = context | | null ; \n / * * @ type { object } * /", "msg": "Avoid shape mutation by adding ref properties to Component in the constructor\n"}
{"diff": "a / src / loader / filetypes / HTML5AudioFile . js \n  b / src / loader / filetypes / HTML5AudioFile . js \n var HTML5AudioFile = new Class ( { \n for ( var i = 0 ; i < instances ; i + + ) \n { \n var audio = new Audio ( ) ; \n - audio . name = this . key + ( ' 0 ' + i ) . slice ( - 2 ) ; / / Useful for debugging \n + audio . dataset . name = this . key + ( ' 0 ' + i ) . slice ( - 2 ) ; / / Useful for debugging \n audio . dataset . used = ' false ' ; \n \n if ( ! touchLocked )", "msg": "audio tag does not support name attribute so setting that value to dataset\n"}
{"diff": "a / packages / mongo / mongo_driver . js \n  b / packages / mongo / mongo_driver . js \n MongoConnection = function ( url , options ) { \n \n / / Use the internal ` s ` object to get the database name from the \n / / connection URL ( parsed by the driver ) . \n - var db = client . db ( client . s . options . dbName ) ; \n + var db = client . db ( \n + client . s . databaseName | | \n + / / An older way of getting the name , supported as a fallback . \n + client . s . options . dbName \n + ) ; \n \n / / First , figure out what the current primary is , if any . \n if ( db . serverConfig . isMasterDoc ) {", "msg": "Prefer client . s . databaseName over client . s . options . dbName .\n"}
{"diff": "a / src / vdom / component . js \n  b / src / vdom / component . js \n export function renderComponent ( component , opts , mountAll ) { \n * / \n export function buildComponentFromVNode ( dom , vnode , context , mountAll ) { \n let c = dom & & dom . _component , \n - oldDom = dom ; \n - \n - let isOwner = c & & dom . _componentConstructor = = = vnode . nodeName ; \n + oldDom = dom , \n + isDirectOwner = c & & dom . _componentConstructor = = = vnode . nodeName , \n + isOwner = isDirectOwner ; \n while ( c & & ! isOwner & & ( c = c . _parentComponent ) ) { \n isOwner = c . constructor = = = vnode . nodeName ; \n } \n export function buildComponentFromVNode ( dom , vnode , context , mountAll ) { \n dom = c . base ; \n } \n else { \n - if ( c ) { \n + if ( c & & ! isDirectOwner ) { \n unmountComponent ( c , true ) ; \n dom = oldDom = null ; \n }", "msg": "Check nesting ownership when attempting to unmount HOC ' s . / cc @ kruczy @ zhenkunou\n"}
{"diff": "a / core / server / web / site / app . js \n  b / core / server / web / site / app . js \n module . exports = function setupSiteApp ( options = { } ) { \n next ( ) ; \n } ) ; \n } ) ; \n + siteApp . use ( async function ( req , res , next ) { \n + if ( ! labsService . isSet ( ' members ' ) ) { \n + return next ( ) ; \n + } \n + if ( ! req . url . includes ( ' token = ' ) ) { \n + return next ( ) ; \n + } \n + try { \n + const member = await membersService . ssr . exchangeTokenForSession ( req , res ) ; \n + req . member = member ; \n + next ( ) ; \n + } catch ( err ) { \n + common . logging . warn ( err . message ) ; \n + return next ( ) ; \n + } \n + } ) ; \n siteApp . use ( function ( req , res , next ) { \n res . locals . member = req . member ; \n next ( ) ;", "msg": "Added a middleware to handle signin via a GET\n"}
{"diff": "a / packages / minifier - css / minifier . js \n  b / packages / minifier - css / minifier . js \n var rewriteRules = function ( rules , mergedCssPath ) { \n / / merged CSS , leaving to the browser the responsibility to calculate \n / / the final resource links ( by adding the application deployment \n / / prefix , here ` myapp / ` , if applicable ) . \n - relativeToMergedCss = path . relative ( mergedCssPath , absolutePath ) ; \n + relativeToMergedCss = pathRelative ( mergedCssPath , absolutePath ) ; \n newCssUrl = \" url ( \" + quote + relativeToMergedCss + quote + \" ) \" ; \n value = value . replace ( oldCssUrl , newCssUrl ) ; \n } \n var pathDirname = function ( p ) { \n return toStandardPath ( path . dirname ( toOSPath ( p ) ) ) ; \n } ; \n \n + var pathRelative = function ( p1 , p2 ) { \n + return toStandardPath ( path . relative ( toOSPath ( p1 ) , toOSPath ( p2 ) ) ) ; \n + } ;", "msg": "Use a reproduced ` pathRelative ` in css minifier\n"}
{"diff": "a / packages / webapp / package . js \n  b / packages / webapp / package . js \n Npm . strip ( { \n Cordova . depends ( { \n ' cordova - plugin - whitelist ' : ' 1 . 3 . 3 ' , \n ' cordova - plugin - wkwebview - engine ' : ' 1 . 1 . 4 ' , \n - ' cordova - plugin - meteor - webapp ' : ' 1 . 7 . 1 - beta . 0 ' \n + ' cordova - plugin - meteor - webapp ' : ' 1 . 7 . 1 - beta . 1 ' \n } ) ; \n \n Package . onUse ( function ( api ) {", "msg": "Update cordova - plugin - meteor - webapp to 1 . 7 . 1 - beta . 1 .\n"}
{"diff": "a / packages / email / email . js \n  b / packages / email / email . js \n var makeTransport = function ( mailUrlString ) { \n mailUrlString + \" ) must be ' smtp ' or ' smtps ' \" ) ; \n } \n \n + if ( mailUrl . protocol = = = ' smtp : ' & & mailUrl . port = = = ' 465 ' ) { \n + Meteor . _debug ( \" $ MAIL_URL is of the form smtp : / / . . . : 465 - - did you mean smtps : / / . . . : 465 ? ( Note added ' s ' to enable SSL . ) \" ) ; \n + } \n + \n / / Allow overriding pool setting , but default to true . \n if ( ! mailUrl . query ) { \n mailUrl . query = { } ;", "msg": "Add warning when using smtp : / / . . . : 465\n"}
{"diff": "a / packages / ember - htmlbars / lib / keywords / partial . js \n  b / packages / ember - htmlbars / lib / keywords / partial . js \n import { internal } from ' htmlbars - runtime ' ; \n ` ` ` \n \n The above example template will render a template named \n - \" _nav \" , which has the same context as the parent template \n - it ' s rendered into , so if the \" _nav \" template also referenced \n + \" - nav \" , which has the same context as the parent template \n + it ' s rendered into , so if the \" - nav \" template also referenced \n ` { { foo } } ` , it would print the same thing as the ` { { foo } } ` \n in the above example . \n \n - If a \" _nav \" template isn ' t found , the ` partial ` helper will \n + If a \" - nav \" template isn ' t found , the ` partial ` helper will \n fall back to a template named \" nav \" . \n \n # # # Bound template names", "msg": "[ DOC release ] Use dash for partial naming\n"}
{"diff": "a / packages / ember - application / lib / system / application . js \n  b / packages / ember - application / lib / system / application . js \n var Application = Ember . Application = Ember . Namespace . extend ( { \n @ method scheduleInitialize \n * / \n scheduleInitialize : function ( ) { \n - var self = this ; \n - this . $ ( ) . ready ( function ( ) { \n - if ( self . isDestroyed | | self . isInitialized ) { return ; } \n - Ember . run . schedule ( ' actions ' , self , ' initialize ' ) ; \n - } ) ; \n + if ( ! this . $ | | this . $ . isReady ) { \n + Ember . run . schedule ( ' actions ' , this , ' initialize ' ) ; \n + } else { \n + var self = this ; \n + this . $ ( ) . ready ( function ( ) { \n + if ( self . isDestroyed | | self . isInitialized ) { return ; } \n + Ember . run ( self , ' initialize ' ) ; \n + } ) ; \n + } \n } , \n \n / * *", "msg": "ensure that wrapping Application . create in a run\n"}
{"diff": "a / www / src / prism - styles . js \n  b / www / src / prism - styles . js \n const prismColors = { \n char : ' # D8DEE9 ' , \n comment : ' # 999999 ' , \n keyword : ' # c5a5c5 ' , \n - lineHighlight : ' # 393d45 ' , \n + lineHighlight : ' # 14161a ' , \n primitive : ' # 5a9bcf ' , \n string : ' # 8dc891 ' , \n variable : ' # d7deea ' ,", "msg": "[ Gatsby ] Darkened line - highlight to increase contrast ( )\n"}
{"diff": "a / tests / node / template - compiler - test . js \n  b / tests / node / template - compiler - test . js \n test ( ' uses plugins with precompile ' , function ( ) { \n templateOutput = templateCompiler . precompile ( ' { { # with foo as bar } } { { / with } } ' ) ; \n ok ( templateOutput . match ( / set \\ ( context , \" bar \" , blockArguments \\ [ 0 \\ ] \\ ) ; / ) , ' transform with as to block params ' ) ; \n } ) ; \n + \n + test ( ' allows enabling of features ' , function ( ) { \n + var templateOutput ; \n + var templateCompiler = require ( path . join ( distPath , ' ember - template - compiler ' ) ) ; \n + \n + templateCompiler . _Ember . FEATURES [ ' ember - htmlbars - component - generation ' ] = true ; \n + \n + templateOutput = templateCompiler . precompile ( ' < some - thing > < / some - thing > ' ) ; \n + ok ( templateOutput . match ( / component \\ ( morph0 , \" some - thing \" / ) , ' component generation can be enabled ' ) ; \n + } ) ;", "msg": "Add template - compiler tests for feature enabling in node - land .\n"}
{"diff": "a / packages / react - router / modules / StaticRouter . js \n  b / packages / react - router / modules / StaticRouter . js \n const staticHandler = ( methodName ) = > ( ) = > { \n ) \n } \n \n + const noop = ( ) = > { } \n + \n / * * \n * The public top - level API for a \" static \" < Router > , so - called because it \n * can ' t actually change the current location . Instead , it just records \n class StaticRouter extends React . Component { \n context . url = createURL ( location ) \n } \n \n + handleListen = ( ) = > \n + noop \n + \n render ( ) { \n const { context , location , . . . props } = this . props / / eslint - disable - line no - unused - vars \n \n class StaticRouter extends React . Component { \n go : staticHandler ( ' go ' ) , \n goBack : staticHandler ( ' goBack ' ) , \n goForward : staticHandler ( ' goForward ' ) , \n - listen : staticHandler ( ' listen ' ) \n + listen : this . handleListen \n } \n \n return < Router { . . . props } history = { history } / >", "msg": "Allow < StaticRouter > to render < Route > s\n"}
{"diff": "a / packages / test - helpers / package . js \n  b / packages / test - helpers / package . js \n Package . describe ( { \n } ) ; \n \n Package . onUse ( function ( api ) { \n - api . use ( [ ' underscore ' , ' tracker ' , ' ejson ' , ' tinytest ' , ' random ' , ' blaze ' ] ) ; \n - api . use ( [ ' jquery @ 1 . 12 . 1 ' ] , ' client ' ) ; \n + api . use ( [ \n + ' ecmascript ' , \n + ' underscore ' , \n + ' tracker ' , \n + ' ejson ' , \n + ' tinytest ' , \n + ' random ' , \n + ' blaze ' , \n + ] ) ; \n + \n + api . use ( [ ' jquery @ 1 . 11 . 1 ' ] , ' client ' ) ; \n \n / / XXX for connection . js . Not sure this really belongs in \n / / test - helpers . It probably would be better off in livedata . But it ' s", "msg": "Use ecmascript in test - helpers and downgrade to latest published jquery .\n"}
{"diff": "a / lang / pt . js \n  b / lang / pt . js \n \n } , \n relativeTime : { \n future : \" em % s \" , \n - past : \" % s atr\u00e1s \" , \n + past : \" h\u00e1 % s \" , \n s : \" segundos \" , \n m : \" um minuto \" , \n mm : \" % d minutos \" ,", "msg": "More natural \" time ago \" expression for PT locale\n"}
{"diff": "a / lib / waterline / adapter / sync . js \n  b / lib / waterline / adapter / sync . js \n \n var _ = require ( ' underscore ' ) ; \n - \n + var augmentAttributes = require ( ' . . / augmentAttributes ' ) ; \n \n / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / \n / / Sync strategies \n module . exports = function ( adapterDef ) { \n else if ( ! attrs ) return self . define ( collection . identity , collection , cb ) ; \n \n / / Otherwise , if it * DOES * exist , we ' ll try and guess what changes need to be made \n - else self . alter ( collection . identity , require ( ' . / augmentAttributes ' ) ( collection . attributes , collection ) , cb ) ; \n + else self . alter ( collection . identity , augmentAttributes ( collection . attributes , collection ) , cb ) ; \n } ) ; \n } ,", "msg": "Fixed one more require path in waterline / adapter / sync . js\n"}
{"diff": "a / packages / core / src / internal / channel . js \n  b / packages / core / src / internal / channel . js \n export function eventChannel ( subscribe , buffer = buffers . none ( ) ) { \n \n const chan = channel ( buffer ) \n const close = ( ) = > { \n + if ( closed ) { \n + return \n + } \n + \n + closed = true \n + \n if ( is . func ( unsubscribe ) ) { \n unsubscribe ( ) \n } \n export function eventChannel ( subscribe , buffer = buffers . none ( ) ) { \n \n unsubscribe = subscribe ( input = > { \n if ( isEnd ( input ) ) { \n - closed = true \n close ( ) \n return \n }", "msg": "Move setting closed var to close method in eventChannel ( followup to )\n"}
{"diff": "a / underscore . js \n  b / underscore . js \n \n var c = _ . templateSettings ; \n var endMatch = new RegExp ( \" ' ( ? = [ ^ \" + c . end . substr ( 0 , 1 ) + \" ] * \" + escapeRegExp ( c . end ) + \" ) \" , \" g \" ) ; \n var fn = new Function ( ' obj ' , \n - ' var p = [ ] ; ' + \n + ' var p = [ ] , print = function ( ) { p . push . apply ( p , arguments ) ; } ; ' + \n ' with ( obj | | { } ) { p . push ( \\ ' ' + \n str . replace ( / \\ r / g , ' \\ \\ r ' ) \n . replace ( / \\ n / g , ' \\ \\ n ' ) \n \n . replace ( endMatch , \" \u2704 \" ) \n . split ( \" ' \" ) . join ( \" \\ \\ ' \" ) \n . split ( \" \u2704 \" ) . join ( \" ' \" ) \n - . replace ( c . interpolate , \" ' + $ 1 + ' \" ) \n + . replace ( c . interpolate , \" ' , $ 1 , ' \" ) \n . split ( c . start ) . join ( \" ' ) ; \" ) \n . split ( c . end ) . join ( \" p . push ( ' \" ) \n + \" ' ) ; } return p . join ( ' ' ) ; \" ) ;", "msg": "Revert \" slight speedup to _ . template \"\n"}
{"diff": "a / Libraries / StyleSheet / splitLayoutProps . js \n  b / Libraries / StyleSheet / splitLayoutProps . js \n function splitLayoutProps ( \n const inner = { } ; \n const outer = { } ; \n if ( props ) { \n - Object . keys ( props ) . forEach ( k = > { \n - const value : $ ElementType < DangerouslyImpreciseStyle , typeof k > = props [ k ] ; \n + Object . keys ( props ) . forEach ( ( k : string ) = > { \n + const value = props [ k ] ; \n if ( OUTER_PROPS [ k ] ) { \n outer [ k ] = value ; \n } else {", "msg": "Add type annotations to prevent issues with planned Flow changes\n"}
{"diff": "a / core / client / mixins / shortcuts - route . js \n  b / core / client / mixins / shortcuts - route . js \n \n - / * global key , console * / \n + / * global key * / \n \n / / Configure KeyMaster to respond to all shortcuts , \n / / even inside of \n key . setScope ( ' default ' ) ; \n * and implement a ` shortcuts ` hash . \n * In this hash , keys are shortcut combinations and values are route action names . \n * ( see [ keymaster docs ] ( https : / / github . com / madrobby / keymaster / blob / master / README . markdown ) ) , \n - * \n + * \n * ` ` ` javascript \n * shortcuts : { \n * ' ctrl + s , command + s ' : ' save ' , \n var ShortcutsRoute = Ember . Mixin . create ( { \n activate : function ( ) { \n this . _super ( ) ; \n if ( ! this . shortcuts ) { \n - console . error ( ' Shortcuts not found on route ' ) ; \n return ; \n } \n this . registerShortcuts ( ) ;", "msg": "Remove console . error from shortcuts - route mixing\n"}
{"diff": "a / tests / classes / PluginManager . js \n  b / tests / classes / PluginManager . js \n describe ( ' PluginManager ' , ( ) = > { \n describe ( ' Plugin / CLI integration ' , ( ) = > { \n const serverlessInstance = new Serverless ( ) ; \n serverlessInstance . init ( ) ; \n - const serverlessExec = path . join ( serverlessInstance . config . serverlessPath , \n - ' . . ' , ' bin ' , ' serverless ' ) ; \n + \n + / / Cannot rely on shebang in severless . js to invoke script using NodeJS on Windows . Add ' node ' to command . \n + const execPrefix = os . platform ( ) = = = ' win32 ' ? ' node ' : null ; \n + const serverlessExec = execPrefix + path . join ( serverlessInstance . config . serverlessPath , \n + ' . . ' , ' bin ' , ' serverless ' ) ; \n const tmpDir = testUtils . getTmpDirPath ( ) ; \n fse . mkdirSync ( tmpDir ) ; \n const cwd = process . cwd ( ) ;", "msg": "Add explicit ' node ' prefix to command used to invoke serverless on Windows in unit tests .\n"}
{"diff": "a / packages / ui / fields . js \n  b / packages / ui / fields . js \n _extend ( UI . Component , { \n } \n \n return function ( / * arguments * / ) { \n - var data = getComponentData ( self ) ; \n - if ( typeof result = = = ' function ' ) \n + if ( typeof result = = = ' function ' ) { \n + var data = getComponentData ( self ) ; \n return result . apply ( data , arguments ) ; \n + } \n return result ; \n } ; \n } ,", "msg": "only access data if needed in comp . lookup\n"}
{"diff": "a / lib / model . js \n  b / lib / model . js \n function handleSave ( promise , self ) { \n * # # # # Example : \n * \n * product . sold = Date . now ( ) ; \n - * product . save ( function ( err , product ) { \n + * product . save ( function ( err , product , numberAffected ) { \n * if ( err ) . . \n * } ) \n * \n + * The callback will receive three parameters , ` err ` if an error occurred , ` product ` which is the saved ` product ` , and ` numberAffected ` which will be 1 when the document was found and updated in the database , otherwise 0 . \n + * \n * The ` fn ` callback is optional . If no ` fn ` is passed and validation fails , the validation error will be emitted on the connection used to create this model . \n * \n * var db = mongoose . createConnection ( . . ) ;", "msg": "docs ; document third param to document . save callback\n"}
{"diff": "a / Libraries / JavaScriptAppEngine / Initialization / InitializeJavaScriptAppEngine . js \n  b / Libraries / JavaScriptAppEngine / Initialization / InitializeJavaScriptAppEngine . js \n function setupDocumentShim ( ) { \n if ( GLOBAL . document ) { \n GLOBAL . document . createElement = null ; \n } \n + \n + / / There is no DOM so MutationObserver doesn ' t make sense . It is used \n + / / as feature detection in Bluebird Promise implementation \n + GLOBAL . MutationObserver = undefined ; \n } \n \n function handleErrorWithRedBox ( e ) {", "msg": "[ ReactNative ] Remove global MutationObserver to fix Bluebird feature detection\n"}
{"diff": "a / packages / internal - test - helpers / lib / module - for . js \n  b / packages / internal - test - helpers / lib / module - for . js \n import { all } from ' rsvp ' ; \n \n export default function moduleFor ( description , TestClass , . . . mixins ) { \n QUnit . module ( description , { \n - beforeEach : function ( . . . args ) { \n - let instance = new TestClass ( . . . args ) ; \n + beforeEach : function ( assert ) { \n + let instance = new TestClass ( assert ) ; \n this . instance = instance ; \n if ( instance . beforeEach ) { \n - return instance . beforeEach ( . . . args ) ; \n + return instance . beforeEach ( assert ) ; \n } \n } ,", "msg": "Refactor ` new Thing ( . . . args ) ` to avoid ` construct ` babel helper .\n"}
{"diff": "a / lib / router . js \n  b / lib / router . js \n var urlMappings = { \n } ; \n \n / / Extend mappings from main file \n - urlMappings = _ . extend ( mappings , config . urlMappings | | { } ) ; \n + urlMappings = _ . extend ( urlMappings , config . urlMappings | | { } ) ; \n \n / / Extend mappings from config directory ( legacy method ) \n if ( path . existsSync ( config . appPath + ' / config / mappings . js ' ) ) { \n - urlMappings = _ . extend ( mappings , require ( config . appPath + ' / config / mappings ' ) . customMappings ( ) ) ; \n + urlMappings = _ . extend ( urlMappings , require ( config . appPath + ' / config / mappings ' ) . customMappings ( ) ) ; \n }", "msg": "Added support for mappings specified in main driver file ( while maintaining support for legacy method )\n"}
{"diff": "a / website / core / WebPlayer . js \n  b / website / core / WebPlayer . js \n var WebPlayer = React . createClass ( { \n style = { { marginTop : 4 } } \n width = ' 880 ' \n height = { this . parseParams ( this . props . params ) . platform = = = ' android ' ? ' 425 ' : ' 420 ' } \n - data - src = { ` / / cdn . rawgit . com / dabbott / react - native - web - player / v0 . 1 . 3 / index . html $ { hash } ` } \n + data - src = { ` / / npmcdn . com / react - native - web - player @ 1 . 0 . 0 / index . html $ { hash } ` } \n frameBorder = ' 0 ' \n / > \n < / div >", "msg": "Use npmcdn in docs instead of rawgit for web player\n"}
{"diff": "a / test / MySQLAdapter . test . js \n  b / test / MySQLAdapter . test . js \n \n / / Test MySQLAdapter \n - var mysql = require ( ' . / adapters / MySQLAdapter . js ' ) ; \n - require ( ' . / crud . test . js ' ) ( mysql ) ; \n \\ No newline at end of file \n + require ( ' . / crud . test . js ' ) ( require ( ' . / adapters / MySQLAdapter . js ' ) ) ; \n \\ No newline at end of file", "msg": "Set up better unit testing interface for existing code and newly added adapters .\n"}
{"diff": "a / lib / commands / deploy_lambda . js \n  b / lib / commands / deploy_lambda . js \n Packager . prototype . _browserifyBundle = Promise . method ( function ( ) { \n b . transform ( babelify ) \n } \n \n + if ( _this . _awsmJson . lambda . package . optimize . transform ) { \n + b . transform ( _this . _awsmJson . lambda . package . optimize . transform ) ; \n + } \n + \n / / optimize . exclude \n _this . _awsmJson . lambda . package . optimize . exclude . forEach ( function ( file ) { \n b . exclude ( file ) ;", "msg": "Added support for ' transform ' option in browserify , necessary for supporting non - babel transformers like coffeeify .\n"}
{"diff": "a / tools / isobuild / import - scanner . js \n  b / tools / isobuild / import - scanner . js \n export default class ImportScanner { \n } \n \n if ( oldFile [ name ] ! = = newFile [ name ] ) { \n + const fuzzyCase = \n + oldFile . sourcePath . toLowerCase ( ) = = = newFile . sourcePath . toLowerCase ( ) ; \n + \n throw new Error ( \n - \" Attempting to combine different files : \\ n \" + \n + \" Attempting to combine different files \" + \n + ( fuzzyCase ? \" ( is the filename case slightly different ? ) \" : \" \" ) + \n + \" : \\ n \" + \n inspect ( omit ( oldFile , \" dataString \" ) ) + \" \\ n \" + \n inspect ( omit ( newFile , \" dataString \" ) ) + \" \\ n \" \n ) ;", "msg": "Improve helpfulness of error message when combining different files\n"}
{"diff": "a / src / layer / vector / Path . SVG . js \n  b / src / layer / vector / Path . SVG . js \n L . Path = L . Path . extend ( { \n } \n \n this . _fireMouseEvent ( e ) ; \n + \n + if ( this . hasEventListeners ( e . type ) ) { \n + L . DomEvent . stopPropagation ( e ) ; \n + } \n } , \n \n _fireMouseEvent : function ( e ) {", "msg": "Allow click events on Path . SVG elements to fall through if they are not handled .\n"}
{"diff": "a / examples / with - material - ui - next / components / withRoot . js \n  b / examples / with - material - ui - next / components / withRoot . js \n function withRoot ( BaseComponent ) { \n < JssProvider registry = { context . sheetsRegistry } jss = { context . jss } > \n < MuiThemeProvider theme = { context . theme } sheetsManager = { context . sheetsManager } > \n < AppWrapper > \n - < BaseComponent / > \n + < BaseComponent { . . . this . props } / > \n < / AppWrapper > \n < / MuiThemeProvider > \n < / JssProvider >", "msg": "Material - UI example : Pass through unrelated props to wrapped component ( )\n"}
{"diff": "a / lib / policies . js \n  b / lib / policies . js \n module . exports = runPolicy ; \n function runPolicy ( controllerName , actionName , req , res , next ) { \n \n / / TODO : move this to configuration . js so the server won ' t be allowed to start w / invalid policies \n - if ( ! sails . config . policies | | ! _ . isObject ( sails . config . policies ) | | ! sails . config . policies [ ' * ' ] ) { \n + if ( ! sails . config . policies | | ! _ . isObject ( sails . config . policies ) | | _ . isUndefined ( sails . config . policies [ ' * ' ] ) ) { \n sails . log . error ( ' Invalid policy configuration : Missing default * policy ! ' ) ; \n console . log ( sails . config . policies ) ; \n process . exit ( 1 ) ;", "msg": "Allow default ' * ' policy to be set to false ( switched config validity check to look for undefined , not just falsy values . )\n"}
{"diff": "a / docs / scripts / buildApi . js \n  b / docs / scripts / buildApi . js \n function buildDocs ( options ) { \n / * * \n * Collect classes comments from the source \n * / \n - const stylesRegexp = / export const styles . * \\ n ( . * \\ n ) * } ; \\ n \\ n / ; \n - const styleRegexp = / \\ / \\ * ( . * ) \\ * \\ / \\ n \\ s * ( \\ w * ) / g ; \n + const stylesRegexp = / export const styles . * [ \\ r \\ n ] ( . * [ \\ r \\ n ] ) * } ; [ \\ r \\ n ] [ \\ r \\ n ] / ; \n + const styleRegexp = / \\ / \\ * ( . * ) \\ * \\ / [ \\ r \\ n ] \\ s * ( \\ w * ) / g ; \n / / Extract the styles section from the source \n const stylesSrc = stylesRegexp . exec ( styleSrc ) ; \n if ( stylesSrc ) {", "msg": "[ core ] Better Windows support for the API generation ( )\n"}
{"diff": "a / packages / eslint - config - react - app / index . js \n  b / packages / eslint - config - react - app / index . js \n module . exports = { \n ' no - unused - vars ' : [ \n ' warn ' , \n { \n - args : ' none ' , \n + args : ' all ' , \n ignoreRestSiblings : true , \n } , \n ] ,", "msg": "Change no - unused - vars ' args ' from none to all to show warning on destructured objects\n"}
{"diff": "a / examples / parties / client / client . js \n  b / examples / parties / client / client . js \n \n Meteor . subscribe ( \" directory \" ) ; \n Meteor . subscribe ( \" parties \" ) ; \n \n - / / If no party selected , select one . \n + / / If no party selected , or if the selected party was deleted , select one . \n Meteor . startup ( function ( ) { \n Deps . autorun ( function ( ) { \n - if ( ! Session . get ( \" selected \" ) ) { \n + var selected = Session . get ( \" selected \" ) ; \n + if ( ! selected | | ! Parties . findOne ( selected ) ) { \n var party = Parties . findOne ( ) ; \n if ( party ) \n Session . set ( \" selected \" , party . _id ) ; \n + else \n + Session . set ( \" selected \" , null ) ; \n } \n } ) ; \n } ) ;", "msg": "parties example : force selection to an actually - existing party .\n"}
{"diff": "a / tools / profile - require . js \n  b / tools / profile - require . js \n RequireInvocation . prototype . isOurCode = function ( ) { \n if ( ! self . name . match ( / \\ / / ) ) \n return false ; / / we always require our stuff via a path \n \n - var files = require ( ' . / files . js ' ) ; \n - var ourSource = files . pathResolve ( __dirname ) ; \n - var required = files . pathResolve ( files . pathDirname ( self . filename ) , self . name ) ; \n + / / it is OK to use path here and not files . js as we are just checking the path \n + var path = require ( ' path ' ) ; \n + var ourSource = path . resolve ( __dirname ) ; \n + var required = path . resolve ( path . dirname ( self . filename ) , self . name ) ; \n if ( ourSource . length > required . length ) \n return false ; \n return required . substr ( 0 , ourSource . length ) = = = ourSource ;", "msg": "make profile - require . js not to require files . js\n"}
{"diff": "a / lib / ace / mode / xml_highlight_rules . js \n  b / lib / ace / mode / xml_highlight_rules . js \n var XmlHighlightRules = function ( ) { \n token : \" text \" , \n regex : \" \\ \\ s + \" \n } , { \n - token : \" entity . reference \" , \n + token : \" constant . character . entity \" , \n regex : \" ( ? : & # [ 0 - 9 ] + ; ) | ( ? : & # x [ 0 - 9a - fA - F ] + ; ) | ( ? : & [ a - zA - Z0 - 9_ : \\ \\ . - ] + ; ) \" \n } , { \n token : \" text \" ,", "msg": "Change entity . reference to constant . character . entity\n"}
{"diff": "a / src / gameobjects / Text . js \n  b / src / gameobjects / Text . js \n Phaser . Text . prototype . updateText = function ( ) { \n { \n / / Simple layout ( no tabs ) \n var lineWidth = this . context . measureText ( lines [ i ] ) . width + this . style . strokeThickness + this . padding . x ; \n + \n + / / Adjust for wrapped text \n + if ( this . style . wordWrap ) \n + { \n + lineWidth - = this . context . measureText ( ' ' ) . width ; \n + } \n } \n else \n {", "msg": "adjust wrapped text that is centered to sprite via anchor\n"}
{"diff": "a / src / preact . js \n  b / src / preact . js \n export function render ( component , parent ) { \n if ( c ) hook ( c , ' componentWillMount ' ) ; \n parent . appendChild ( built ) ; \n if ( c ) hook ( c , ' componentDidMount ' ) ; \n - return build ; \n + return built ; \n }", "msg": "Return a DOM node from ` render ( ) ` instead of for some reason returning ` build ( ) ` ( an internal method . . )\n"}
{"diff": "a / select2 . js \n  b / select2 . js \n \n var selected = element . find ( \" : selected \" ) ; \n / / a single select box always has a value , no need to null check ' selected ' \n if ( $ . isFunction ( callback ) ) \n - callback ( { id : selected . attr ( \" value \" ) , text : selected . text ( ) } ) ; \n + callback ( { id : selected . attr ( \" value \" ) , text : selected . text ( ) , element : selected } ) ; \n } ; \n }", "msg": "pass element attr to initSelection for selects upon init\n"}
{"diff": "a / moment . js \n  b / moment . js \n \n relativeDate : function ( ) { \n var format = ' YYYY DDDD ' , \n unixTimestamp = this . valueOf ( ) , \n - arrayKey , nextWeek , lastWeek ; \n + arrayKey , nextWeek , lastWeek , \n + relativeDateFormat ; \n \n switch ( this . format ( format ) ) { \n case moment ( ) . format ( format ) : \n \n } \n } \n \n - if ( arrayKey ) { \n - return moment . relativeDate [ arrayKey ] . replace ( ' % weekday ' , this . format ( ' dddd ' ) ) . replace ( ' % time ' , this . format ( ' LT ' ) ) ; \n + if ( arrayKey & & moment . relativeDate [ arrayKey ] ) { \n + relativeDateFormat = moment . relativeDate [ arrayKey ] ; \n + \n + if ( ' function ' = = = typeof relativeDateFormat ) { \n + relativeDateFormat = relativeDateFormat . call ( this ) ; \n + } \n + return relativeDateFormat . replace ( ' % weekday ' , this . format ( ' dddd ' ) ) . replace ( ' % time ' , this . format ( ' LT ' ) ) ; \n } \n \n return this . format ( moment . relativeDate . else | | ' L ' ) ;", "msg": "adds the possibility to return a function as a relativeDate format\n"}
{"diff": "a / src / shared / compatibility . js \n  b / src / shared / compatibility . js \n PDFJS . compatibilityChecked = true ; \n if ( ' requestAnimationFrame ' in window ) { \n return ; \n } \n - window . requestAnimationFrame = \n - window . mozRequestAnimationFrame | | \n - window . webkitRequestAnimationFrame ; \n - if ( ! ( ' requestAnimationFrame ' in window ) ) { \n - installFakeAnimationFrameFunctions ( ) ; \n + window . requestAnimationFrame = window . mozRequestAnimationFrame | | \n + window . webkitRequestAnimationFrame ; \n + if ( window . requestAnimationFrame ) { \n + return ; \n } \n + installFakeAnimationFrameFunctions ( ) ; \n } ) ( ) ; \n \n / / Support : Android , iOS", "msg": "Correctly detect if ` requestAnimationFrame ` is supported in ` compatibility . js ` ( issue 8272 )\n"}
{"diff": "a / src / js / reverselookup . js \n  b / src / js / reverselookup . js \n const fromNetFilter = async function ( rawFilter ) { \n const \u00b5b = \u00b5Block ; \n const writer = new \u00b5b . CompiledLineIO . Writer ( ) ; \n const parser = new vAPI . StaticFilteringParser ( ) ; \n + parser . setMaxTokenLength ( \u00b5b . urlTokenizer . MAX_TOKEN_LENGTH ) ; \n parser . analyze ( rawFilter ) ; \n \n if ( \u00b5b . staticNetFilteringEngine . compile ( parser , writer ) = = = false ) {", "msg": "Set max token length on parser for consistent compilation\n"}
{"diff": "a / packages / ember - routing / lib / helpers / render . js \n  b / packages / ember - routing / lib / helpers / render . js \n Ember . onLoad ( ' Ember . Handlebars ' , function ( Handlebars ) { \n container = options . data . keywords . controller . container ; \n router = container . lookup ( ' router : main ' ) ; \n \n - Ember . assert ( \" This view is alredy rendered \" , ! router | | ! router . _lookupActiveView ( name ) ) ; \n + Ember . assert ( \" This view is already rendered \" , ! router | | ! router . _lookupActiveView ( name ) ) ; \n \n view = container . lookup ( ' view : ' + name ) | | container . lookup ( ' view : default ' ) ;", "msg": "Correct spelling of ' already ' in assertion .\n"}
{"diff": "a / lib / ace / autocomplete . js \n  b / lib / ace / autocomplete . js \n var Autocomplete = function ( ) { \n editor . completer . insertMatch ( ) ; \n } , \n \" Shift - Return \" : function ( editor ) { editor . completer . insertMatch ( true ) ; } , \n - \" Tab \" : function ( editor ) { editor . completer . insertMatch ( ) ; } , \n \n \" PageUp \" : function ( editor ) { editor . completer . popup . gotoPageUp ( ) ; } , \n \" PageDown \" : function ( editor ) { editor . completer . popup . gotoPageDown ( ) ; }", "msg": "Disable Tab command binding for autocomplete ( incompatible with live autocomplete )\n"}
{"diff": "a / tools / console . js \n  b / tools / console . js \n _ . extend ( ProgressDisplayFull . prototype , { \n \n / / The cursor appears in position 0 ; we indent it a little to avoid this \n / / This also means it appears less important , which is good \n - var indentColumns = 4 ; \n + var indentColumns = 3 ; \n \n var streamColumns = this . _stream . columns ; \n var statusColumns ;", "msg": "Change progress message indent to 3 , so it lines up with ' = > Started . . . '\n"}
{"diff": "a / lib / app / load . js \n  b / lib / app / load . js \n module . exports = function ( sails ) { \n configOverride . explicitHost = configOverride . host ; \n } \n \n + / / Optionally expose services , models , sails , _ , async , etc . as globals as soon as the \n + / / user config loads . \n + sails . on ( ' hook : userconfig : loaded ' , sails . exposeGlobals ) ; \n \n async . auto ( { \n \n module . exports = function ( sails ) { \n \n sails . log . verbose ( ' All hooks were loaded successfully . ' ) ; \n \n - / / Optionally expose services , models , sails , _ , async , etc . as globals \n - sails . exposeGlobals ( ) ; \n + / / If userconfig hook is turned off , still load globals . \n + if ( sails . config . hooks & & sails . config . hooks . userconfig = = = false | | \n + ( sails . config . loadHooks & & sails . config . loadHooks . indexOf ( ' userconfig ' ) = = - 1 ) ) { \n + sails . exposeGlobals ( ) ; \n + } \n + \n \n cb & & cb ( null , sails ) ; \n }", "msg": "Expose globals as soon as user config loads .\n"}
{"diff": "a / src / index . js \n  b / src / index . js \n function anime ( params = { } ) { \n childrenLength = children . length ; \n for ( let i = childrenLength ; i - - ; ) instance . children [ i ] . reset ( ) ; \n if ( instance . reversed & & instance . loop ! = = true | | ( direction = = = ' alternate ' & & instance . loop = = = 1 ) ) instance . remaining + + ; \n - setAnimationsProgress ( 0 ) ; \n + setAnimationsProgress ( instance . reversed ? instance . duration : 0 ) ; \n } \n \n / / Set Value helper", "msg": "Set progress to duration instead of 0 when reversed\n"}
{"diff": "a / underscore . js \n  b / underscore . js \n \n / / Retrieve the names of an object ' s properties . \n / / Delegates to * * ECMAScript 5 * * ' s native ` Object . keys ` \n _ . keys = nativeKeys | | function ( obj ) { \n - if ( _ . isArray ( obj ) ) return _ . range ( 0 , obj . length ) ; \n var keys = [ ] ; \n for ( var key in obj ) if ( hasOwnProperty . call ( obj , key ) ) keys [ keys . length ] = key ; \n return keys ;", "msg": "Fixing . . . Maloptimization of _ . keys for sparse arrays .\n"}
{"diff": "a / server / utils . js \n  b / server / utils . js \n export function getAvailableChunks ( distDir ) { \n \n chunkFiles . forEach ( filename = > { \n if ( / \\ . js $ / . test ( filename ) ) { \n - const chunkName = filename . replace ( / - . * / , ' ' ) \n + const chunkName = filename . replace ( / - [ ^ - ] * / , ' ' ) \n chunksMap [ chunkName ] = filename \n } \n } )", "msg": "Use a more appropriate regexp for removing hash from a filename ( )\n"}
{"diff": "a / packages / ember - metal / lib / run_loop . js \n  b / packages / ember - metal / lib / run_loop . js \n function invokeLaterTimers ( ) { \n @ param { Number } wait \n Number of milliseconds to wait . \n \n - @ returns { Timer } an object you can use to cancel a timer at a later time . \n + @ returns { String } a string you can use to cancel the timer in Ember . run . cancel ( ) later . \n * / \n Ember . run . later = function ( target , method ) { \n var args , expires , timer , guid , wait ;", "msg": "Fixed return type docs for Ember . run . later\n"}
{"diff": "a / Libraries / Image / Image . android . js \n  b / Libraries / Image / Image . android . js \n let Image = ( props : ImagePropsType , forwardedRef ) = > { \n return ( \n < ImageAnalyticsTagContext . Consumer > \n { analyticTag = > { \n - const nativePropsWithAnalytics = { \n - . . . nativeProps , \n - analyticTag : analyticTag , \n - } ; \n + const nativePropsWithAnalytics = \n + analyticTag ! = = null \n + ? { \n + . . . nativeProps , \n + analyticTag : analyticTag , \n + } \n + : nativeProps ; \n return ( \n < TextAncestor . Consumer > \n { hasTextAncestor = >", "msg": "Avoid passing analyticsTag prop to native if this is set to null\n"}
{"diff": "a / packages / meteor / cordova_environment . js \n  b / packages / meteor / cordova_environment . js \n Meteor . isCordova = true ; \n \n Meteor . isProduction = meteorEnv . NODE_ENV = = = \" production \" ; \n Meteor . isDevelopment = meteorEnv . NODE_ENV ! = = \" production \" ; \n + \n + / / For now , since we can ' t send different bundles to different Cordova \n + / / browsers at runtime , all Cordova clients must be regarded as legacy . \n + Meteor . isModern = false ;", "msg": "Set Meteor . isModern to false in Cordova environments .\n"}
{"diff": "a / src / animation / Animation . js \n  b / src / animation / Animation . js \n Object . defineProperty ( Phaser . Animation . prototype , ' frame ' , { \n \n / * * \n * @ name Phaser . Animation # speed \n - * @ property { number } speed - Gets or sets the current speed of the animation in frames per second . Changing this in a playing animation will take effect from the next frame . Minimum value is 1 . \n + * @ property { number } speed - Gets or sets the current speed of the animation in frames per second . Changing this in a playing animation will take effect from the next frame . Value must be greater than 0 . \n * / \n Object . defineProperty ( Phaser . Animation . prototype , ' speed ' , { \n \n get : function ( ) { \n \n - return Math . round ( 1000 / this . delay ) ; \n + return 1000 / this . delay ; \n \n } , \n \n set : function ( value ) { \n \n - if ( value > = 1 ) \n + if ( value > 0 ) \n { \n this . delay = 1000 / value ; \n }", "msg": "Allow animation speed greater than 0\n"}
{"diff": "a / src / common / markdown - render . js \n  b / src / common / markdown - render . js \n \n / / Experimentation has shown some tags that need to be tweaked a little . \n preprocessInfo . html = \n preprocessInfo . html \n + . replace ( / ( < \\ / div > ) ( ( ? ! < div ) . + ? ) ( < div [ ^ > ] * > ) / ig , ' $ 1 < div > $ 2 < / div > $ 3 ' ) / / a raw text node without an enclosing < div > won ' t be handled properly , so add one \n + . replace ( / ( < \\ / div > ) < div [ ^ > ] * > < \\ / div > ( < div [ ^ > ] * > ) / ig , ' $ 1 $ 2 ' ) / / empty < div > between other < div > elems gets removed \n . replace ( / < div [ ^ > ] * > < br > < \\ / div > / ig , ' < br > ' ) / / < div > < br > < / div > - - > < br > \n . replace ( / ( < div [ ^ > ] * > ) + / ig , ' < br > ' ) / / opening < div > - - > < br > ( but nested < div > < div > just gets one < br > ) \n . replace ( / < \\ / div > / ig , ' ' ) / / closing < / div > - - > nothing", "msg": "Enablign GFM line breaks revealed some shortcomings in the HTML - to - text code . Added a couple more preprocessing rules to deal with DIVs .\n"}
{"diff": "a / src / sound / html5 / HTML5AudioSoundManager . js \n  b / src / sound / html5 / HTML5AudioSoundManager . js \n var HTML5AudioSoundManager = new Class ( { \n * @ default [ ] \n * / \n this . onBlurPausedSounds = [ ] ; \n + / * * \n + * A queue of all actions performed on sound objects while audio was locked . \n + * Once the audio gets unlocked , after an explicit user interaction , \n + * all actions will be performed in chronological order . \n + * \n + * @ private \n + * @ property { { \n + * sound : Phaser . Sound . HTML5AudioSound , \n + * name : string , \n + * value ? : any , \n + * } [ ] } lockedActionsQueue \n + * @ default [ ] \n + * / \n + this . lockedActionsQueue = [ ] ; \n / * * \n * Property that actually holds the value of global mute \n * for HTML5 Audio sound manager implementation .", "msg": "Added lockedActionsQueue property to HTML5AudioSoundManager class for internal use\n"}
{"diff": "a / Libraries / CustomComponents / NavigationExperimental / NavigationCardStackPanResponder . js \n  b / Libraries / CustomComponents / NavigationExperimental / NavigationCardStackPanResponder . js \n class NavigationCardStackPanResponder extends NavigationAbstractPanResponder { \n { \n toValue : props . navigationState . index , \n duration : ANIMATION_DURATION , \n + useNativeDriver : props . position . __isNative , \n } \n ) . start ( ) ; \n }", "msg": "Use native animations if the animated value is native in NavigationCardStackPanResponder\n"}
{"diff": "a / src / lib / locale / locales . js \n  b / src / lib / locale / locales . js \n function loadLocale ( name ) { \n try { \n oldLocale = globalLocale . _abbr ; \n var aliasedRequire = require ; \n - aliasedRequire ( ' . / locale / ' + name ) ; \n + aliasedRequire ( ( typeof __dirname ! = = undefined ? __dirname : ' . ' ) + ' / locale / ' + name ) ; \n getSetGlobalLocale ( oldLocale ) ; \n } catch ( e ) { \n / / mark as not found to avoid repeating expensive file require call causing high CPU", "msg": "[ bugfix ] Use __dirname for locale import if available\n"}
{"diff": "a / packages / autoupdate / package . js \n  b / packages / autoupdate / package . js \n Package . describe ( { \n \n Package . on_use ( function ( api ) { \n api . use ( ' webapp ' , ' server ' ) ; \n + api . use ( ' deps ' , ' client ' ) ; \n api . use ( [ ' livedata ' , ' mongo - livedata ' ] , [ ' client ' , ' server ' ] ) ; \n api . use ( ' reload ' , ' client ' , { weak : true } ) ;", "msg": "Oops , missed one . Add deps package to autoupdate dependencies .\n"}
{"diff": "a / src / core / Core . js \n  b / src / core / Core . js \n class Uppy { \n } ) \n . catch ( ( err ) = > { \n const message = typeof err = = = ' object ' ? err . message : err \n - this . log ( message ) \n - this . info ( message , ' error ' , 4000 ) \n + const details = typeof err = = = ' object ' ? err . details : null \n + this . log ( ` $ { message } $ { details } ` ) \n + this . info ( { message : message , details : details } , ' error ' , 4000 ) \n return Promise . reject ( typeof err = = = ' object ' ? err : new Error ( err ) ) \n } ) \n }", "msg": "show error details when they are available\n"}
{"diff": "a / core / server / services / routing / StaticRoutesRouter . js \n  b / core / server / services / routing / StaticRoutesRouter . js \n class StaticRoutesRouter extends ParentRouter { \n super ( ' StaticRoutesRouter ' ) ; \n \n this . route = { value : mainRoute } ; \n - this . templates = ( object . templates | | [ ] ) . reverse ( ) ; \n + this . templates = object . templates | | [ ] ; \n this . data = object . data | | { query : { } , router : { } } ; \n this . routerName = mainRoute = = = ' / ' ? ' index ' : mainRoute . replace ( / \\ / / g , ' ' ) ; \n \n debug ( this . route . value , this . templates ) ; \n \n if ( this . isChannel ( object ) ) { \n + this . templates = this . templates . reverse ( ) ; \n this . rss = object . rss ! = = false ; \n this . filter = object . filter ; \n this . limit = object . limit ;", "msg": "\ud83d\udc1b Dynamic Routing Beta : Fixed wrong template order for static routes\n"}
{"diff": "a / packages / core / parcel - bundler / src / assets / JSAsset . js \n  b / packages / core / parcel - bundler / src / assets / JSAsset . js \n const Asset = require ( ' . . / Asset ' ) ; \n const babylon = require ( ' babylon ' ) ; \n \n class JSAsset extends Asset { \n + async getDependencies ( ) { \n + await this . loadIfNeeded ( ) ; \n + if ( ! / import | export [ ^ ; ] * from | require \\ s * \\ ( / . test ( this . contents ) ) { \n + / / console . log ( ' skip parse ! ' , this . name ) ; \n + return ; \n + } \n + \n + super . getDependencies ( ) ; \n + } \n + \n parse ( code ) { \n const options = { \n filename : this . name ,", "msg": "Skip loading dependencies for assets that don \u2019 t have import / require\n"}
{"diff": "a / lib / hooks / pubsub / index . js \n  b / lib / hooks / pubsub / index . js \n module . exports = function ( sails ) { \n var room = this . room ( id , \" message \" ) ; \n / / Create the payload \n var data = { \n - verb : \" message \" , \n + verb : \" messaged \" , \n id : id , \n data : message \n } ;", "msg": "Updated verb coming out of pubsub . message ( ) to be past - tense like all the other default pubsub methods .\n"}
{"diff": "a / packages / @ uppy / transloadit / src / Client . js \n  b / packages / @ uppy / transloadit / src / Client . js \n module . exports = class Client { \n ? ` $ { err . message } ( $ { err . details } ) ` \n : err . message \n \n - return fetchWithNetworkError ( ' https : / / status . transloadit . com / client_error ' , { \n + return fetchWithNetworkError ( ' https : / / transloaditstatus . com / client_error ' , { \n method : ' post ' , \n body : JSON . stringify ( { \n endpoint ,", "msg": "Change status . transloadit . com to the more isolated transloaditstatus . com\n"}
{"diff": "a / src / js / static - net - filtering . js \n  b / src / js / static - net - filtering . js \n FilterParser . prototype . parse = function ( s ) { \n s = trimChar ( s , ' * ' ) ; \n } \n \n + / / nothing left ? \n + if ( s = = = ' ' ) { \n + this . unsupported = true ; \n + return this ; \n + } \n + \n / / plain hostname ? \n this . hostnamePure = this . hostnameAnchored & & reHostnameRule . test ( s ) ;", "msg": "trivial test to workaround potential bad filters\n"}
{"diff": "a / src / extensions / default / StaticServer / node / StaticServerDomain . js \n  b / src / extensions / default / StaticServer / node / StaticServerDomain . js \n maxerr : 50 , node : true * / \n / / response data is optional \n if ( resData ) { \n / / TODO other headers ? \n - var type = mime . lookup ( path ) ; \n + var type = mime . lookup ( location . pathname ) ; \n var charset = mime . charsets . lookup ( type ) ; \n res . setHeader ( \" Content - Type \" , type + ( charset ? \" ; charset = \" + charset : \" \" ) ) ; \n res . end ( resData . body ) ;", "msg": "use request pathname for content - type and charset\n"}
{"diff": "a / backbone . js \n  b / backbone . js \n \n if ( key = = null ) return this ; \n \n / / Handle both ` \" key \" , value ` and ` { key : value } ` - style arguments . \n - if ( typeof key = = = ' object ' ) { \n + if ( typeof key = = = ' string ' ) { \n + ( attrs = { } ) [ key ] = val ; \n + } else { \n attrs = key ; \n options = val ; \n - } else { \n - ( attrs = { } ) [ key ] = val ; \n } \n \n options | | ( options = { } ) ; \n \n var attrs , model , success , method , xhr , attributes = this . attributes ; \n \n / / Handle both ` \" key \" , value ` and ` { key : value } ` - style arguments . \n - if ( key = = = void 0 | | typeof key = = = ' object ' ) { \n + if ( typeof key = = = ' string ' ) { \n + ( attrs = { } ) [ key ] = val ; \n + } else { \n attrs = key ; \n options = val ; \n - } else if ( key ! = null ) { \n - ( attrs = { } ) [ key ] = val ; \n } \n \n / / If we ' re not waiting and attributes exist , save acts as ` set ( attr ) . save ( null , opts ) ` .", "msg": "Simplify argument juggling for set / save\n"}
{"diff": "a / packages / ember - runtime / lib / mixins / array . js \n  b / packages / ember - runtime / lib / mixins / array . js \n Ember . Array = Ember . Mixin . create ( Ember . Enumerable , / * * @ scope Ember . Array . protot \n lastIndexOf : function ( object , startAt ) { \n var idx , len = get ( this , ' length ' ) ; \n \n - if ( startAt = = = undefined ) startAt = len - 1 ; \n + if ( startAt = = = undefined | | startAt > = len ) startAt = len - 1 ; \n if ( startAt < 0 ) startAt + = len ; \n \n for ( idx = startAt ; idx > = 0 ; idx - - ) {", "msg": "validate startAt location is greater than length in lastIndexOf array method\n"}
{"diff": "a / src / sound / html5 / HTML5AudioSound . js \n  b / src / sound / html5 / HTML5AudioSound . js \n var HTML5AudioSound = new Class ( { \n this . startTime = 0 ; \n this . audio . play ( ) ; \n } \n + return ; \n + } \n + / / handle looping \n + var startTime = ( this . currentMarker ? this . currentMarker . start : 0 ) ; \n + var endTime = startTime + this . duration ; \n + var currentTime = this . audio . currentTime ; \n + if ( currentTime > = endTime ) { \n + if ( this . currentConfig . loop ) { \n + this . audio . currentTime = startTime + ( currentTime - endTime ) ; \n + } \n } \n } \n } ,", "msg": "Added logic for handling looping in update method\n"}
{"diff": "a / jquery . fullPage . js \n  b / jquery . fullPage . js \n \n / / flag to avoid very fast sliding for landscape sliders \n var slideMoving = false ; \n \n - var isTablet = navigator . userAgent . match ( / ( iPhone | iPod | iPad | Android | BlackBerry | Windows Phone | Tizen | Bada ) / ) ; \n + var isTablet = navigator . userAgent . match ( / ( iPhone | iPod | iPad | Android | BlackBerry | BB10 | Windows Phone | Tizen | Bada ) / ) ; \n var container = $ ( this ) ; / / for compatibity reasons for fullpage < v2 . 0 \n var windowsHeight = $ ( window ) . height ( ) ; \n var isMoving = false ;", "msg": "Added BB10 user agent for Blackberry OS 10 compatibility .\n"}
{"diff": "a / main . js \n  b / main . js \n Request . prototype . request = function ( ) { \n if ( options . ntick ) throw new Error ( \" You cannot pipe to this stream after the first nextTick ( ) after creation of the request stream . \" ) \n options . src = src \n if ( isReadStream ( src ) ) { \n - options . headers [ ' content - type ' ] = mimetypes . lookup ( src . path . slice ( src . path . lastIndexOf ( ' . ' ) + 1 ) ) \n + if ( ! options . headers [ ' content - type ' ] & & ! options . headers [ ' Content - Type ' ] ) \n + options . headers [ ' content - type ' ] = mimetypes . lookup ( src . path . slice ( src . path . lastIndexOf ( ' . ' ) + 1 ) ) \n } else { \n if ( src . headers ) { \n for ( i in src . headers ) {", "msg": "Do not overwrite established content - type headers for read stream deliveries .\n"}
{"diff": "a / core / client / views / debug . js \n  b / core / client / views / debug . js \n \n } \n } ) ; \n } , \n - text : \" Yes \" \n + text : \" Delete \" , \n + buttonClass : \" button - delete \" \n } , \n reject : { \n func : function ( ) { \n return true ; \n } , \n - text : \" No \" \n + text : \" Cancel \" , \n + buttonClass : \" button \" \n } \n } , \n type : \" action \" ,", "msg": "Update delete all content button labels\n"}
{"diff": "a / src / core / Core . js \n  b / src / core / Core . js \n class Uppy { \n this . upload = this . upload . bind ( this ) \n \n this . emitter = ee ( ) \n - this . on = this . emitter . on . bind ( this . emitter ) \n this . off = this . emitter . off . bind ( this . emitter ) \n this . once = this . emitter . once . bind ( this . emitter ) \n this . emit = this . emitter . emit . bind ( this . emitter ) \n class Uppy { \n } \n } \n \n + on ( event , callback ) { \n + this . emitter . on ( event , callback ) \n + return this \n + } \n + \n / * * \n * Iterate on all plugins and run ` update ` on them . \n * Called each time state changes .", "msg": "Add wrapper function for emitter . on that returns uppy instance for easy chaining\n"}
{"diff": "a / packages / ember - runtime / lib / mixins / enumerable . js \n  b / packages / ember - runtime / lib / mixins / enumerable . js \n export default Mixin . create ( { \n - ` index ` is the current index in the iteration . \n - ` enumerable ` is the enumerable object itself . \n \n - It should return the ` true ` to include the item in the results , ` false ` \n + It should return ` true ` to include the item in the results , ` false ` \n otherwise . \n \n Note that in addition to a callback , you can also pass an optional target", "msg": "[ DOC ] Small grammar fix on enumerable filter method\n"}
{"diff": "a / build / tools / fulljslint . js \n  b / build / tools / fulljslint . js \n \n + / * global quit : false , readFile : false * / \n + \n / / Rhino Edition", "msg": "added some globals for rhino functions\n"}
{"diff": "a / src / models / BrowserStyleSheet . js \n  b / src / models / BrowserStyleSheet . js \n class BrowserTag implements Tag { \n if ( name ) { \n const existingNames = this . el . getAttribute ( SC_ATTR ) \n this . el . setAttribute ( SC_ATTR , existingNames ? ` $ { existingNames } $ { name } ` : name ) \n + } \n \n - if ( typeof window ! = = ' undefined ' & & window . __webpack_nonce__ ) { \n - this . el . setAttribute ( ' nonce ' , window . __webpack_nonce__ ) \n - } \n + if ( typeof window ! = = ' undefined ' & & window . __webpack_nonce__ ) { \n + this . el . setAttribute ( ' nonce ' , window . __webpack_nonce__ ) \n } \n }", "msg": "moves the nonce attribute attachement code outside of the name check\n"}
{"diff": "a / mode / python / python . js \n  b / mode / python / python . js \n CodeMirror . defineMode ( \" python \" , function ( conf ) { \n / / TODO - Can you have imaginary longs ? \n intLiteral = true ; \n } \n + / / Zero by itself with no other piece of number . \n + if ( stream . match ( / ^ 0 ( ? ! [ \\ dx ] ) / i ) ) { intLiteral = true ; } \n if ( intLiteral ) { \n / / Integer literals may be \" long \" \n stream . eat ( / L / i ) ;", "msg": "Fixed Python syntax highlighting of single ' 0 ' .\n"}
{"diff": "a / tools / main . js \n  b / tools / main . js \n Fiber ( function ( ) { \n / / ATTEMPT 2 : legacy release , on disk . ( And it ' s a \" real \" release , not a \n / / \" red pill \" release which has the same name as a modern release ! ) \n if ( warehouse . realReleaseExistsInWarehouse ( releaseName ) ) { \n + if ( process . platform = = = \" win32 \" ) { \n + Console . error ( \" Releases of Meteor before 1 . 1 are not supported on \" , \n + \" Windows . Please use a newer release . \" ) ; \n + process . exit ( 1 ) ; \n + } \n + \n var manifest = warehouse . ensureReleaseExistsAndReturnManifest ( \n releaseName ) ; \n oldSpringboard ( manifest . tools ) ; / / doesn ' t return", "msg": "Throw error on Windows if you try to springboard to a super old release\n"}
{"diff": "a / src / system / Device . js \n  b / src / system / Device . js \n Phaser . Device . prototype = { \n \n var ua = navigator . userAgent ; \n \n - if ( / Android / . test ( ua ) ) \n + if ( / Playstation Vita / . test ( ua ) ) \n + { \n + this . vita = true ; \n + } \n + else if ( / Kindle / . test ( ua ) | | / \\ bKF [ A - Z ] [ A - Z ] + / . test ( ua ) | | / Silk . * Mobile Safari / . test ( ua ) ) \n + { \n + this . kindle = true ; \n + / / This will NOT detect early generations of Kindle Fire , I think there is no reliable way . . . \n + / / E . g . \" Mozilla / 5 . 0 ( Macintosh ; U ; Intel Mac OS X 10_6_3 ; en - us ; Silk / 1 . 1 . 0 - 80 ) AppleWebKit / 533 . 16 ( KHTML , like Gecko ) Version / 5 . 0 Safari / 533 . 16 Silk - Accelerated = true \" \n + } \n + else if ( / Android / . test ( ua ) ) \n { \n this . android = true ; \n }", "msg": "Added a UA string test for Kindle\n"}
{"diff": "a / core / frontend / services / routing / controllers / entry . js \n  b / core / frontend / services / routing / controllers / entry . js \n module . exports = function entryController ( req , res , next ) { \n } \n \n / / CASE : Add access property to entry for v3 + api \n + / / @ TODO : reconsider the location of this - it ' s part of members \n if ( res . locals . apiVersion ! = = ' v0 . 1 ' & & res . locals . apiVersion ! = = ' v2 ' ) { \n entry . access = ! ! entry . html ; \n }", "msg": "Added a TODO for members access code\n"}
{"diff": "a / lib / plugins / package / lib / zipService . js \n  b / lib / plugins / package / lib / zipService . js \n function excludeNodeDevDependencies ( servicePath ) { \n } ) \n . then ( ( ) = > fs . readFileAsync ( nodeDevDepFile ) ) \n . then ( ( fileContent ) = > { \n - const dependencies = _ . filter ( \n + const dependencies = _ . compact ( \n ( _ . uniq ( _ . split ( fileContent . toString ( ' utf8 ' ) , ' \\ n ' ) ) ) , \n elem = > elem . length > 0 \n ) ;", "msg": "Switch from _ . filter to _ . compact to remove falsey values\n"}
{"diff": "a / core / server / data / importer / importers / data / settings . js \n  b / core / server / data / importer / importers / data / settings . js \n class SettingsImporter extends BaseImporter { \n help : this . modelName , \n context : JSON . stringify ( { activeApps , installedApps } ) \n } ) ; \n - \n - this . dataToImport = _ . filter ( this . dataToImport , ( data ) = > { \n - return data . key ! = = ' active_apps ' & & data . key ! = = ' installed_apps ' ; \n - } ) ; \n } \n \n + this . dataToImport = _ . filter ( this . dataToImport , ( data ) = > { \n + return data . key ! = = ' active_apps ' & & data . key ! = = ' installed_apps ' ; \n + } ) ; \n + \n const permalinks = _ . find ( this . dataToImport , { key : ' permalinks ' } ) ; \n \n if ( permalinks ) {", "msg": "Updated import to never use { active , instsalled } _apps\n"}
{"diff": "a / lighthouse - cli / test / fixtures / static - server . js \n  b / lighthouse - cli / test / fixtures / static - server . js \n function requestHandler ( request , response ) { \n headers [ ' Content - Type ' ] = ' text / css ' ; \n } else if ( filePath . endsWith ( ' . svg ' ) ) { \n headers [ ' Content - Type ' ] = ' image / svg + xml ' ; \n + } else if ( filePath . endsWith ( ' . png ' ) ) { \n + headers [ ' Content - Type ' ] = ' image / png ' ; \n + } else if ( filePath . endsWith ( ' . gif ' ) ) { \n + headers [ ' Content - Type ' ] = ' image / gif ' ; \n + } else if ( filePath . endsWith ( ' . jpg ' ) | | filePath . endsWith ( ' . jpeg ' ) ) { \n + headers [ ' Content - Type ' ] = ' image / jpeg ' ; \n } \n \n let delay = 0 ;", "msg": "tests ( smokehouse ) : set Content - Type for images served by static - server . js ( )\n"}
{"diff": "a / modules / mixins / PathListener . js \n  b / modules / mixins / PathListener . js \n var PathListener = { \n \n componentWillMount : function ( ) { \n PathStore . setup ( this . getLocation ( ) ) ; \n + \n + if ( this . updatePath ) \n + this . updatePath ( PathStore . getCurrentPath ( ) ) ; \n } , \n \n componentDidMount : function ( ) {", "msg": "[ changed ] Give path listeners a chance to update state before mounting\n"}
{"diff": "a / tools / bundler . js \n  b / tools / bundler . js \n _ . extend ( JsImage . prototype , { \n } ; \n \n if ( item . sourceMap ) { \n - / / Reference the source map in the source . Looked up later by node - inspector . \n + / / Reference the source map in the source . Looked up later by \n + / / node - inspector . \n var sourceMapBaseName = item . targetPath + \" . map \" ; \n \n / / Write the source map . \n _ . extend ( JsImage . prototype , { \n ) ; \n \n var sourceMapFileName = path . basename ( loadItem . sourceMap ) ; \n - item . source = item . source . concat ( \" \\ n / / # sourceMappingURL = \" + sourceMapFileName + \" \\ n \" ) ; \n + item . source + = \" \\ n / / # sourceMappingURL = \" + sourceMapFileName + \" \\ n \" ; \n loadItem . sourceMapRoot = item . sourceMapRoot ; \n }", "msg": "Prefer + = operator for strings concatenation to String # concat\n"}
{"diff": "a / src / printer . js \n  b / src / printer . js \n function genericPrintNoParens ( path , options , print ) { \n case \" SpreadProperty \" : \n case \" SpreadPropertyPattern \" : \n case \" RestElement \" : \n - return concat ( [ \" . . . \" , path . call ( print , \" argument \" ) ] ) ; \n + return concat ( [ \n + \" . . . \" , \n + path . call ( print , \" argument \" ) , \n + path . call ( print , \" typeAnnotation \" ) \n + ] ) ; \n case \" FunctionDeclaration \" : \n case \" FunctionExpression \" : \n if ( n . async )", "msg": "Support type annotation for rest argument on babylon parser\n"}
{"diff": "a / packages / mongo - livedata / mongo_driver . js \n  b / packages / mongo - livedata / mongo_driver . js \n _Mongo . prototype . update = function ( collection_name , selector , mod , options ) { \n throw e ; \n } \n \n + / / explicit safety check . null and undefined can crash the mongo \n + / / driver . Although the node driver and minimongo do ' support ' \n + / / non - object modifier in that they don ' t crash , they are not \n + / / meaningful operations and do not do anything . Defensively throw an \n + / / error here . \n + if ( ! mod | | typeof mod ! = = ' object ' ) \n + throw new Error ( \" Invalid modifier . Modifier must be an object . \" ) ; \n + \n var write = self . _maybeBeginWrite ( ) ; \n \n if ( ! options ) options = { } ;", "msg": "Add explicit safety check for non - object modifiers passed to update .\n"}
{"diff": "a / src / layer / vector / Path . js \n  b / src / layer / vector / Path . js \n L . Path = L . Layer . extend ( { \n _fireMouseEvent : function ( e , type ) { \n type = type | | e . type ; \n \n - if ( ! this . listens ( type ) ) { return ; } \n + if ( ! this . listens ( type , true ) ) { return ; } \n \n var map = this . _map , \n containerPoint = map . mouseEventToContainerPoint ( e ) ,", "msg": "make propagation work correctly for vector layers\n"}
{"diff": "a / test / nullValues . test . js \n  b / test / nullValues . test . js \n describe ( ' Null values ' , function ( ) { \n User . findAll ( { \n type : ' null value create test ' \n } , function ( err , users ) { \n + if ( err ) return done ( new Error ( err ) ) ; \n if ( users . length < 1 ) return done ( new Error ( ' Proper user was not created ! ' ) ) ; \n if ( users . length > 1 ) return done ( new Error ( ' Too many users created ! ' ) ) ; \n else done ( err ) ; \n describe ( ' Null values ' , function ( ) { \n / / Now check that the user we just created can be found \n / / but use the NULL name as the query \n User . findAll ( { \n - name : null \n + name : null , \n + type : ' null value create test ' \n } , function ( err , users ) { \n + if ( err ) return done ( new Error ( err ) ) ; \n if ( users . length < 1 ) return done ( new Error ( ' Proper user was not found ! ' ) ) ; \n if ( users . length > 1 ) return done ( new Error ( ' Too many users found ! ' ) ) ; \n else done ( err ) ;", "msg": "Made null test work independently or with other tests . Added better error handling .\n"}
{"diff": "a / lib / lift / index . js \n  b / lib / lift / index . js \n function liftSails ( configOverride , cb ) { \n sails . log ( ' ( to see your app , visit : ' + ( usingSSL ? ' https ' : ' http ' ) + ' : / / ' + sails . config . host + ' : ' + sails . config . port + ' ) ' ) ; \n } \n \n - return cb & & cb ( err ) ; \n + return cb & & cb ( err , sails ) ; \n } ) ; \n }", "msg": "added sails object to callback for sails . lift , fixing issue\n"}
{"diff": "a / v3 / src / sound / BaseSound . js \n  b / v3 / src / sound / BaseSound . js \n var BaseSound = new Class ( { \n * / \n this . volume = 1 ; \n / * * \n - * [ description ] \n + * Defines the speed at which the audio asset will be played . \n + * Value of 1 . 0 plays the audio at full speed , 0 . 5 plays the audio \n + * at half speed and 2 . 0 doubles the audio ' s playback speed . \n + * This value gets multiplied by global rate to have the final playback speed . \n * \n * @ property { number } rate \n * / \n var BaseSound = new Class ( { \n applyConfig : function ( ) { \n this . mute = this . currentConfig . mute ; \n this . volume = this . currentConfig . volume ; \n + this . rate = this . currentConfig . rate ; \n / / TODO assign other config values to buffer source \n } , \n fadeTo : function ( volume , duration ) {", "msg": "updated description for rate property for BaseSound class\n"}
{"diff": "a / core / server / data / migrations / versions / 3 . 0 / 10 - remove - empty - strings . js \n  b / core / server / data / migrations / versions / 3 . 0 / 10 - remove - empty - strings . js \n module . exports . up = ( { transacting } ) = > { \n ) ; \n } ; \n \n - module . exports . down = ( { connection } ) = > { \n - const replaceNullWithEmptyString = createReplace ( connection , null , ' ' ) ; \n + module . exports . down = ( { transacting } ) = > { \n + const replaceNullWithEmptyString = createReplace ( transacting , null , ' ' ) ; \n \n return Promise . all ( \n tablesToUpdate . map ( ( { tableName , columns } ) = > Promise . all (", "msg": "Fixed error rolling back the \" remove empty strings \" migration\n"}
{"diff": "a / www / src / components / layout . js \n  b / www / src / components / layout . js \n class DefaultLayout extends React . Component { \n < Banner / > \n < Navigation pathname = { this . props . location . pathname } / > \n < div \n - className = { ` main - body ` } \n + className = { ` main - body docSearch - content ` } \n css = { { \n paddingLeft : ` env ( safe - area - inset - left ) ` , \n paddingRight : ` env ( safe - area - inset - right ) ` ,", "msg": "Add docSearch - content class to layout for Actions in the Gatsb \u2026 ( )\n"}
{"diff": "a / lib / hooks / orm / index . js \n  b / lib / hooks / orm / index . js \n module . exports = function ( sails ) { \n \n Object . keys ( collections ) . forEach ( function eachInstantiatedCollection ( modelID ) { \n \n + / / Bind context for models \n + / / ( this allows usage with tools like ` async ` ) \n + util . bindAll ( collections [ modelID ] ) ; \n + \n / / Set ` sails . models . * ` reference to instantiated Collection \n / / Exposed as ` sails . models [ modelID ] ` \n sails . models [ modelID ] = collections [ modelID ] ;", "msg": "Bind context for model methods , to allow them to be used transparently with tools like async .\n"}
{"diff": "a / tools / tests / dynamic - import . js \n  b / tools / tests / dynamic - import . js \n function run ( isProduction ) { \n run . match ( \" App running at \" ) ; \n run . match ( \" SERVER FAILURES : 0 \" ) ; \n run . match ( \" CLIENT FAILURES : 0 \" ) ; \n + run . waitSecs ( 30 ) ; \n run . expectExit ( 0 ) ; \n }", "msg": "Increase exit timeout of dynamic - import test to fix AppVeyor CI .\n"}
{"diff": "a / packages / rocketchat - ldap / server / loginHandler . js \n  b / packages / rocketchat - ldap / server / loginHandler . js \n Accounts . registerLoginHandler ( \" ldap \" , function ( loginRequest ) { \n } else if ( RocketChat . settings . get ( ' LDAP_Default_Domain ' ) ! = = ' ' ) { \n userObject . email = username + ' @ ' + RocketChat . settings . get ( ' LDAP_Default_Domain ' ) ; \n } else { \n - throw new Meteor . Error ( \" LDAP - login - error \" , \" LDAP Authentication succeded , there is no email to create an account . \" ) ; \n + const error = new Meteor . Error ( \" LDAP - login - error \" , \" LDAP Authentication succeded , there is no email to create an account . \" ) ; \n + logger . error ( error ) ; \n + throw error ; \n } \n \n logger . debug ( ' New user data ' , userObject ) ;", "msg": "Log error when trying to creat a user with no email via LDAP\n"}
{"diff": "a / examples / auth / pass . js \n  b / examples / auth / pass . js \n var iterations = 12000 ; \n \n exports . hash = function ( pwd , salt , fn ) { \n if ( 3 = = arguments . length ) { \n - crypto . pbkdf2 ( pwd , salt , iterations , len , fn ) ; \n + crypto . pbkdf2 ( pwd , salt , iterations , len , function ( err , hash ) { \n + fn ( err , ( new Buffer ( hash , ' binary ' ) ) . toString ( ' base64 ' ) ) ; \n + } ) ; \n } else { \n fn = salt ; \n crypto . randomBytes ( len , function ( err , salt ) { \n exports . hash = function ( pwd , salt , fn ) { \n salt = salt . toString ( ' base64 ' ) ; \n crypto . pbkdf2 ( pwd , salt , iterations , len , function ( err , hash ) { \n if ( err ) return fn ( err ) ; \n - fn ( null , salt , hash ) ; \n + fn ( null , salt , ( new Buffer ( hash , ' binary ' ) ) . toString ( ' base64 ' ) ) ; \n } ) ; \n } ) ; \n } \n - } ; \n + } ; \n \\ No newline at end of file", "msg": "Modified hash to return base64 encoded strings .\n"}
{"diff": "a / src / scene / SceneManager . js \n  b / src / scene / SceneManager . js \n var SceneManager = new Class ( { \n { \n entry = this . _start [ i ] ; \n \n - this . start ( entry ) ; \n + this . start ( entry , entry . scene . data ) ; \n } \n \n this . _start . length = 0 ; \n var SceneManager = new Class ( { \n { \n entry = this . _start [ i ] ; \n \n - this . start ( entry ) ; \n + this . start ( entry , entry . scene . data ) ; \n } \n \n / / Clear the pending lists \n var SceneManager = new Class ( { \n { \n if ( this . game . isBooted ) \n { \n - this . start ( key ) ; \n + this . start ( key , newScene . sys . settings . data ) ; \n } \n else \n { \n var SceneManager = new Class ( { \n } \n } \n \n + if ( sceneConfig . hasOwnProperty ( ' data ' ) ) \n + { \n + newScene . data = sceneConfig . data ; \n + } \n + \n return newScene ; \n } , \n \n var SceneManager = new Class ( { \n if ( entry . key = = = key ) \n { \n entry . autoStart = true ; \n - entry . data = data ; \n + entry . scene . data = data ; \n } \n }", "msg": "[ ISSUE ] Phaser Scene - passing data to scene init & create methods\n"}
{"diff": "a / tools / meteor . js \n  b / tools / meteor . js \n Fiber ( function ( ) { \n \n Commands . push ( { \n name : \" update \" , \n - help : \" Upgrade to the latest version of Meteor \" , \n + help : \" Upgrade this project to the latest version of Meteor \" , \n func : function ( argv ) { \n / / reparse args \n var opt = require ( ' optimist ' ) . usage (", "msg": "slightly better short description for update\n"}
{"diff": "a / lib / codemirror . js \n  b / lib / codemirror . js \n var CodeMirror = ( function ( ) { \n \n var line = getLine ( n ) , curSpace = line . indentation ( options . tabSize ) , \n curSpaceString = line . text . match ( / ^ \\ s * / ) [ 0 ] , indentation ; \n + if ( how = = \" smart \" ) { \n + indentation = mode . indent ( state , line . text . slice ( curSpaceString . length ) , line . text ) ; \n + if ( indentation = = Pass ) how = \" prev \" ; \n + } \n if ( how = = \" prev \" ) { \n if ( n ) indentation = getLine ( n - 1 ) . indentation ( options . tabSize ) ; \n else indentation = 0 ; \n } \n - else if ( how = = \" smart \" ) indentation = mode . indent ( state , line . text . slice ( curSpaceString . length ) , line . text ) ; \n else if ( how = = \" add \" ) indentation = curSpace + options . indentUnit ; \n else if ( how = = \" subtract \" ) indentation = curSpace - options . indentUnit ; \n indentation = Math . max ( 0 , indentation ) ;", "msg": "Allow indent methods to return CodeMirror . Pass to indicate no support\n"}
{"diff": "a / tools / isopack . js \n  b / tools / isopack . js \n _ . extend ( Isopack . prototype , { \n dir = files . realpath ( dir ) ; \n \n var mainJson = Isopack . readMetadataFromDirectory ( dir ) ; \n + if ( ! mainJson ) { \n + throw new Error ( \" No metadata files found for isopack at : \" + dir ) ; \n + } \n \n / / isopacks didn ' t used to know their name , but they should . \n if ( _ . has ( mainJson , ' name ' ) & & name ! = = mainJson . name ) {", "msg": "Throw a better error if no isopack metadata files\n"}
{"diff": "a / backbone . js \n  b / backbone . js \n \n this . cid = _ . uniqueId ( ' view ' ) ; \n this . _configure ( options | | { } ) ; \n this . _ensureElement ( ) ; \n - this . delegateEvents ( ) ; \n this . initialize . apply ( this , arguments ) ; \n + this . delegateEvents ( ) ; \n } ; \n \n / / Cached regex to split keys for ` delegate ` .", "msg": "Switched order of delegateEvents and initialize in Backbone . View constructor in order to allow for explicit setting of this . el in initialize ( and ensure that events are bound correctly ) .\n"}
{"diff": "a / index . js \n  b / index . js \n \n \n var cookies = require ( ' . / lib / cookies ' ) \n , copy = require ( ' . / lib / copy ' ) \n - , Request = require ( ' . / request ' ) \n , util = require ( ' util ' ) \n ; \n \n function request ( uri , options , callback ) { \n } \n \n if ( callback ) opts . callback = callback \n - var r = new Request ( opts ) \n + var r = new request . Request ( opts ) \n return r \n } \n \n module . exports = request \n \n - request . Request = Request ; \n + request . debug = process . env . NODE_DEBUG & & / \\ brequest \\ b / . test ( process . env . NODE_DEBUG ) \n \n - request . debug = process . env . NODE_DEBUG & & / request / . test ( process . env . NODE_DEBUG ) \n + request . Request = require ( ' . / request ' ) \n \n request . initParams = initParams", "msg": "Rearrange requires to prepare for fixing debug code\n"}
{"diff": "a / src / document / DocumentCommandHandlers . js \n  b / src / document / DocumentCommandHandlers . js \n define ( function ( require , exports , module ) { \n } \n } ; \n var encoding = PreferencesManager . getViewState ( \" encoding \" , context ) ; \n - if ( encoding [ fullPath ] ) { \n + if ( encoding & & encoding [ fullPath ] ) { \n file . _encoding = encoding [ fullPath ] ; \n } \n }", "msg": "Adding null check for encoding preference ( )\n"}
{"diff": "a / src / index . js \n  b / src / index . js \n export default class Vuex { \n return this . _vm . _data \n } \n \n + set state ( v ) { \n + throw new Error ( ' [ vuex ] Vuex root state is read only . ' ) \n + } \n + \n / * * \n * Dispatch an action . \n *", "msg": "throw error when user tries to replace root state\n"}
{"diff": "a / js / bootstrap - buttons . js \n  b / js / bootstrap - buttons . js \n \n \n $ el . html ( data [ state ] | | $ . fn . button . defaults [ state ] ) \n \n - state = = ' loadingText ' ? \n - $ el . addClass ( d ) . attr ( d , d ) : \n - $ el . removeClass ( d ) . removeAttr ( d ) \n + setTimeout ( function ( ) { \n + state = = ' loadingText ' ? \n + $ el . addClass ( d ) . attr ( d , d ) : \n + $ el . removeClass ( d ) . removeAttr ( d ) \n + } , 0 ) \n } \n \n function toggle ( el ) {", "msg": "push disable setting to the event loop - this allows for form submit to begin\n"}
{"diff": "a / packages / create - next - app / templates / default / pages / index . js \n  b / packages / create - next - app / templates / default / pages / index . js \n const Home = ( ) = > ( \n < / a > \n \n < a \n - href = \" https : / / zeit . co / new ? utm_source = create - next - app & utm_medium = default - template & utm_campaign = create - next - app \" \n + href = \" https : / / zeit . co / new ? filter = next . js & utm_source = create - next - app & utm_medium = default - template & utm_campaign = create - next - app \" \n className = \" card \" \n > \n < h3 > Deploy & rarr ; < / h3 >", "msg": "Use filter for create - next - app template ( )\n"}
{"diff": "a / lib / common / utils . js \n  b / lib / common / utils . js \n exports . pe = new PrettyError ( ) \n exports . printWarn = function ( msg , from ) { \n / * eslint - disable no - console * / \n const fromStr = from ? Chalk . yellow ( ` $ { from } \\ n \\ n ` ) : ' ' \n - console . error ( ' \\ n ' + Chalk . bgYellow . black ( ' WARN ' ) + fromStr + msg + ' \\ n ' ) \n + console . warn ( ' \\ n ' + Chalk . bgYellow . black ( ' WARN ' ) + fromStr + msg + ' \\ n ' ) \n } \n \n exports . renderError = function ( _error , from ) {", "msg": "use console . warn for warnings\n"}
{"diff": "a / packages / @ uppy / companion - client / src / RequestClient . js \n  b / packages / @ uppy / companion - client / src / RequestClient . js \n module . exports = class RequestClient { \n get defaultHeaders ( ) { \n return { \n ' Accept ' : ' application / json ' , \n - ' Content - Type ' : ' application / json ' , \n - / / @ todo remove this hardcoded version \n - ' uppy - client ' : ' companion - client : 1 . 0 . 2 ' \n + ' Content - Type ' : ' application / json ' \n } \n }", "msg": "companion - client : remove version header to avoid block headers against\n"}
{"diff": "a / packages / rocketchat - api / server / api . js \n  b / packages / rocketchat - api / server / api . js \n class API extends Restivus { \n roles : 0 , \n statusDefault : 0 , \n _updatedAt : 0 , \n - customFields : 0 \n + customFields : 0 , \n + settings : 0 \n } ; \n \n this . _config . defaultOptionsEndpoint = function _defaultOptionsEndpoint ( ) {", "msg": "Don ' t expose the ' settings ' property on users to regular users via the rest api ( )\n"}
{"diff": "a / lib / hooks / views / res . view . js \n  b / lib / hooks / views / res . view . js \n module . exports = function _addResViewMethod ( req , res , next ) { \n \n / / Merge with config views locals \n if ( sails . config . views . locals ) { \n - _ . defaults ( locals , sails . config . views . locals ) ; \n + _ . merge ( locals , sails . config . views . locals , _ . defaults ) ; \n } \n \n / / If the path was specified , but invalid", "msg": "Merging locals in a more predictable way\n"}
{"diff": "a / Libraries / Network / XMLHttpRequest . ios . js \n  b / Libraries / Network / XMLHttpRequest . ios . js \n class XMLHttpRequest extends XMLHttpRequestBase { \n } \n \n sendImpl ( method : ? string , url : ? string , headers : Object , data : any ) : void { \n - var body ; \n if ( typeof data = = = ' string ' ) { \n - body = { string : data } ; \n - } else if ( data instanceof FormData ) { \n - body = { formData : data . getParts ( ) } ; \n - } else { \n - body = data ; \n + data = { string : data } ; \n + } \n + if ( data instanceof FormData ) { \n + data = { formData : data . getParts ( ) } ; \n } \n RCTNetworking . sendRequest ( \n { \n method , \n url , \n - body , \n + data , \n headers , \n incrementalUpdates : this . onreadystatechange ? true : false , \n } ,", "msg": "[ ReactNative ] fix up XMLHttpRequest failures\n"}
{"diff": "a / v3 / src / sound / BaseSoundManager . js \n  b / v3 / src / sound / BaseSoundManager . js \n var BaseSoundManager = new Class ( { \n } , \n destroy : NOOP \n } ) ; \n + / * * \n + * Global playback rate . \n + * @ property { number } rate \n + * / \n + Object . defineProperty ( BaseSoundManager . prototype , ' rate ' , { \n + get : function ( ) { \n + return this . _rate ; \n + } , \n + set : function ( value ) { \n + this . _rate = value ; \n + this . sounds . forEach ( function ( sound ) { \n + sound . setRate ( ) ; \n + } , this ) ; \n + } \n + } ) ; \n module . exports = BaseSoundManager ;", "msg": "Defining rate property in BaseSound class so it can be used in both Web Audio and HTML5 Audio implementations\n"}
{"diff": "a / js / reveal . js \n  b / js / reveal . js \n var Reveal = ( function ( ) { \n / / Enable keyboard shortcuts for navigation \n keyboard : true , \n \n + / / Optional function that blocks keyboard events when retuning false \n + keyboardCondition : null , \n + \n / / Enable the slide overview mode \n overview : true , \n \n var Reveal = ( function ( ) { \n * / \n function onDocumentKeyDown ( event ) { \n \n + / / If there ' s a condition specified and it returns false , \n + / / ignore this event \n + if ( typeof config . keyboardCondition = = = ' function ' & & config . keyboardCondition ( ) = = = false ) { \n + return true ; \n + } \n + \n / / Remember if auto - sliding was paused so we can toggle it \n var autoSlideWasPaused = autoSlidePaused ;", "msg": "add support for custom keyboard availability condition\n"}
{"diff": "a / src / math / RadToDeg . js \n  b / src / math / RadToDeg . js \n var CONST = require ( ' . / const ' ) ; \n * \n * @ param { float } radians - The angle in radians to convert ot degrees . \n * \n - * @ return { integer } The given angle in degrees . \n + * @ return { integer } The given angle converted to degrees . \n * / \n var RadToDeg = function ( radians ) \n {", "msg": "Update return statement description in RadToDeg\n"}
{"diff": "a / select2 . js \n  b / select2 . js \n the specific language governing permissions and limitations under the Apache Lic \n / / abstract \n getPlaceholderOption : function ( ) { \n if ( this . select ) { \n - var firstOption = this . select . children ( ) . first ( ) ; \n + var firstOption = this . select . children ( ' option ' ) . first ( ) ; \n if ( this . opts . placeholderOption ! = = undefined ) { \n / / Determine the placeholder option based on the specified placeholderOption setting \n return ( this . opts . placeholderOption = = = \" first \" & & firstOption ) | |", "msg": "Use more specific selector for finding options of a select\n"}
{"diff": "a / src / colorspace . js \n  b / src / colorspace . js \n var DeviceRgbCS = ( function DeviceRgbCSClosure ( ) { \n return rgbBuf ; \n } , \n isDefaultDecode : function rgbcs_isDefaultDecode ( decodeMap ) { \n - return 0 = = decodeMap [ 0 ] = = decodeMap [ 2 ] = = decodeMap [ 4 ] & & \n - 1 = = decodeMap [ 1 ] = = decodeMap [ 3 ] = = decoeMap [ 5 ] ; \n + ColorSpace . isDefaultDecode ( decodeMap , this . numComps ) ; \n } \n } ; \n return DeviceRgbCS ;", "msg": "Use the general function for is default decode .\n"}
{"diff": "a / uniqueId . js \n  b / uniqueId . js \n let idCounter = 0 \n * uniqueId ( ) \n * / / = > ' 105 ' \n * / \n - function uniqueId ( prefix ) { \n + function uniqueId ( prefix = ' ' ) { \n const id = + + idCounter \n return ` $ { prefix + id } ` \n }", "msg": "default prefix to empty string ( )\n"}
{"diff": "a / lib / plugins / aws / utils / credentials . js \n  b / lib / plugins / aws / utils / credentials . js \n const writeCredentialsContent = content = > \n writeFileError = > { \n if ( writeFileError ) { \n if ( writeFileError . code = = = ' ENOENT ' ) { \n - mkdir ( \n - awsConfigDirPath , \n - { mode : constants . S_IRUSR | constants . S_IWUSR | constants . S_IXUSR } , \n - mkdirError = > { \n - if ( mkdirError ) reject ( mkdirError ) ; \n - else resolve ( writeCredentialsContent ( content ) ) ; \n - } \n - ) ; \n + mkdir ( awsConfigDirPath , { mode : constants . S_IRWXU } , mkdirError = > { \n + if ( mkdirError ) reject ( mkdirError ) ; \n + else resolve ( writeCredentialsContent ( content ) ) ; \n + } ) ; \n } else { \n reject ( writeFileError ) ; \n }", "msg": "Simplify mode access setting\n"}
{"diff": "a / docs / demo / demo . js \n  b / docs / demo / demo . js \n if ( ' text ' in search ) { \n if ( ' options ' in search ) { \n $ optionsElem . value = search . options ; \n } else { \n - $ optionsElem . value = JSON . stringify ( marked . getDefaults ( ) , null , ' ' ) ; \n + $ optionsElem . value = JSON . stringify ( \n + marked . getDefaults ( ) , \n + function ( key , value ) { \n + if ( value & & typeof ( value ) = = = \" object \" & & Object . getPrototypeOf ( value ) ! = = Object . prototype ) { \n + return undefined ; \n + } \n + return value ; \n + } , ' ' ) ; \n } \n \n if ( search . outputType ) {", "msg": "Filter complex objects out of JSON defaults .\n"}
{"diff": "a / packages / rocketchat - lib / client / lib / cachedCollection . js \n  b / packages / rocketchat - lib / client / lib / cachedCollection . js \n class CachedCollection { \n useSync = true , \n useCache = true , \n debug = true , \n - version = 2 , \n + version = 3 , \n maxCacheTime = 60 * 60 * 24 * 30 \n } ) { \n this . collection = collection | | new Meteor . Collection ( null ) ;", "msg": "Increase client cache version to force resync\n"}
{"diff": "a / js / reveal . js \n  b / js / reveal . js \n \n injectStyleSheet ( ' @ page { size : ' + pageWidth + ' px ' + pageHeight + ' px ; margin : 0 ; } ' ) ; \n \n / / Limit the size of certain elements to the dimensions of the slide \n - injectStyleSheet ( ' . reveal img , . reveal video , . reveal iframe { max - width : ' + slideWidth + ' px ; max - height : ' + slideHeight + ' px } ' ) ; \n + injectStyleSheet ( ' . reveal section > img , . reveal section > video , . reveal section > iframe { max - width : ' + slideWidth + ' px ; max - height : ' + slideHeight + ' px } ' ) ; \n \n document . body . classList . add ( ' print - pdf ' ) ; \n document . body . style . width = pageWidth + ' px ' ;", "msg": "more specific targeting for pdf printing hack\n"}
{"diff": "a / core / server / data / db / backup . js \n  b / core / server / data / db / backup . js \n writeExportFile = function writeExportFile ( exportResult ) { \n } ; \n \n const readBackup = async ( filename ) = > { \n - / / TODO : prevent from directory traversal - need to sanitize the filename probably on validation layer \n - var backupPath = path . resolve ( urlUtils . urlJoin ( config . get ( ' paths ' ) . contentPath , ' data ' , filename ) ) ; \n + const parsedFileName = path . parse ( filename ) ; \n + const sanitized = ` $ { parsedFileName . name } $ { parsedFileName . ext } ` ; \n + const backupPath = path . resolve ( urlUtils . urlJoin ( config . get ( ' paths ' ) . contentPath , ' data ' , sanitized ) ) ; \n \n const exists = await fs . pathExists ( backupPath ) ;", "msg": "Added input sanitization for backup path\n"}
{"diff": "a / lib / codemirror . js \n  b / lib / codemirror . js \n var CodeMirror = ( function ( ) { \n function updateCursor ( ) { \n var head = sel . inverted ? sel . from : sel . to , lh = textHeight ( ) ; \n var pos = localCoords ( head , true ) ; \n - var globalY = pos . y + displayOffset * textHeight ( ) ; \n - inputDiv . style . top = Math . max ( Math . min ( globalY , scroller . offsetHeight ) , 0 ) + \" px \" ; \n - inputDiv . style . left = pos . x + \" px \" ; \n + var wrapOff = eltOffset ( wrapper ) , lineOff = eltOffset ( lineDiv ) ; \n + inputDiv . style . top = ( pos . y + lineOff . top - wrapOff . top ) + \" px \" ; \n + inputDiv . style . left = ( pos . x + lineOff . left - wrapOff . left ) + \" px \" ; \n if ( posEq ( sel . from , sel . to ) ) { \n cursor . style . top = pos . y + \" px \" ; \n cursor . style . left = ( options . lineWrapping ? Math . min ( pos . x , lineSpace . offsetWidth ) : pos . x ) + \" px \" ;", "msg": "Be more precise about hidden input placement\n"}
{"diff": "a / tools / meteor - services / deploy . js \n  b / tools / meteor - services / deploy . js \n var bundleAndDeploy = function ( options ) { \n qs : _ . extend ( { } , options . rawOptions , settings ! = = null ? { settings : settings } : { } ) , \n bodyStream : files . createTarGzStream ( files . pathJoin ( buildDir , ' bundle ' ) ) , \n expectPayload : [ ' url ' ] , \n - preflightPassword : preflight . preflightPassword \n + preflightPassword : preflight . preflightPassword , \n + / / Disable the HTTP timeout for this POST request . \n + timeout : null , \n } ) ; \n } ) ;", "msg": "Disable the HTTP timeout for the Galaxy upload POST .\n"}
{"diff": "a / lib / tag / code . js \n  b / lib / tag / code . js \n \n / / Based on : https : / / raw . github . com / imathis / octopress / master / plugins / code_block . rb \n \n var extend = require ( ' . . / extend ' ) , \n - highlight = require ( ' . . / util ' ) . highlight ; \n + highlight = require ( ' . . / util ' ) . highlight , \n + config = hexo . config , \n + highlightConfig = config . highlight , \n + lineNumConfig = highlightConfig ? highlightConfig . line_number : true ; \n \n var regex = { \n captionUrlTitle : / ( \\ S [ \\ S \\ s ] * ) \\ s + ( https ? : \\ / \\ / ) ( \\ S + ) \\ s + ( . + ) / i , \n var codeblock = function ( args , content ) { \n } \n } \n \n - return highlight ( content , { lang : lang , caption : caption } ) ; \n + return highlight ( content , { lang : lang , caption : caption , gutter : lineNumConfig } ) ; \n } ; \n \n extend . tag . register ( ' code ' , codeblock , true ) ;", "msg": "Apply highlight settings to code block tag\n"}
{"diff": "a / lib / hooks / http / initialize . js \n  b / lib / hooks / http / initialize . js \n module . exports = function ( sails ) { \n \n / / Set Express \" trust proxy \" if appropriate . \n / / > https : / / expressjs . com / en / guide / behind - proxies . html \n - if ( ! _ . isUndefined ( sails . config . http . trustProxy ) ) { \n + if ( sails . config . http . trustProxy ) { \n expressApp . set ( ' trust proxy ' , sails . config . http . trustProxy ) ; \n }", "msg": "Update to match change made here : https : / / github . com / balderdashy / sails / commit / 2adc0af4e57eaddd48e40ab78af3bd3cf76faab6\n"}
{"diff": "a / src / layer / vector / Canvas . js \n  b / src / layer / vector / Canvas . js \n L . Canvas = L . Renderer . extend ( { \n var container = this . _container = document . createElement ( ' canvas ' ) ; \n \n L . DomEvent \n - . on ( container , ' mousemove ' , L . Util . throttle ( this . _onMouseMove , 66 , this ) , this ) \n + . on ( container , ' mousemove ' , L . Util . throttle ( this . _onMouseMove , 32 , this ) , this ) \n . on ( container , ' click dblclick mousedown mouseup contextmenu ' , this . _onClick , this ) \n . on ( container , ' mouseout ' , this . _handleMouseOut , this ) ;", "msg": "reduce the throttle for canvas layers\n"}
{"diff": "a / tests / test - multipart . js \n  b / tests / test - multipart . js \n function runTest ( t , a ) { \n \n if ( a . headers ) { \n t . ok ( req . headers [ ' content - type ' ] . match ( / multipart \\ / mixed / ) ) \n - } \n - else { \n + } else { \n t . ok ( req . headers [ ' content - type ' ] . match ( / multipart \\ / related / ) ) \n } \n \n + if ( chunked ) { \n + t . ok ( req . headers [ ' transfer - encoding ' ] = = = ' chunked ' ) \n + t . notOk ( req . headers [ ' content - length ' ] ) \n + } else { \n + t . ok ( req . headers [ ' content - length ' ] ) \n + t . notOk ( req . headers [ ' transfer - encoding ' ] ) \n + } \n + \n / / temp workaround \n var data = ' ' \n req . setEncoding ( ' utf8 ' )", "msg": "Add multipart test for transfer - encoding and content - length\n"}
{"diff": "a / core / server / data / schema / commands . js \n  b / core / server / data / schema / commands . js \n function createColumnMigration ( . . . migrations ) { \n const hasColumn = await conn . schema . hasColumn ( table , column ) ; \n const isInCorrectState = dbIsInCorrectState ( hasColumn ) ; \n \n - const log = createLog ( isInCorrectState ? ' info ' : ' warn ' ) ; \n + const log = createLog ( isInCorrectState ? ' warn ' : ' info ' ) ; \n \n log ( ` $ { operationVerb } $ { table } . $ { column } ` ) ;", "msg": "Fixed log usage for columnMigration command\n"}
{"diff": "a / lib / ace / mode / sql_highlight_rules . js \n  b / lib / ace / mode / sql_highlight_rules . js \n var SqlHighlightRules = function ( ) { \n \n var keywords = ( \n \" select | insert | update | delete | from | where | and | or | group | by | order | limit | offset | having | as | case | \" + \n - \" when | else | end | type | left | right | join | on | outer | desc | asc \" \n + \" when | else | end | type | left | right | join | on | outer | desc | asc | union \" \n ) ; \n \n var builtinConstants = (", "msg": "Adding highlight support for the UNION sql keyword\n"}
{"diff": "a / src / map / Map . js \n  b / src / map / Map . js \n L . Map = L . Class . extend ( { \n } else { \n if ( ! changeCenter ) { \n this . _rawPanBy ( offset ) ; \n + } \n \n this . fire ( ' move ' ) ; \n - } \n \n clearTimeout ( this . _sizeTimer ) ; \n this . _sizeTimer = setTimeout ( L . bind ( this . fire , this , ' moveend ' ) , 200 ) ; \n } \n + \n this . fire ( ' resize ' , { \n oldSize : oldSize , \n newSize : newSize", "msg": "Moving brace to correct position .\n"}
{"diff": "a / src / platforms / web / runtime / components / transition . js \n  b / src / platforms / web / runtime / components / transition . js \n function placeholder ( h , rawChild ) { \n : null \n } \n \n + function hasParentTransition ( vnode ) { \n + while ( ( vnode = vnode . parent ) ) { \n + if ( vnode . data . transition ) { \n + return true \n + } \n + } \n + } \n + \n export default { \n name : ' transition ' , \n props : transitionProps , \n export default { \n \n / / if this is a component root node and the component ' s \n / / parent container node also has transition , skip . \n - if ( this . $ vnode . parent & & this . $ vnode . parent . data . transition ) { \n + if ( hasParentTransition ( this . $ vnode ) ) { \n return rawChild \n }", "msg": "more robust parent transition skip check\n"}
{"diff": "a / src / layer / vector / Path . js \n  b / src / layer / vector / Path . js \n L . Path = L . Layer . extend ( { \n \n options : { \n stroke : true , \n - color : ' # 0033ff ' , \n - / / dashArray : null , \n + color : ' # 3377ff ' , \n + weight : 3 , \n + opacity : 1 , \n lineCap : ' round ' , \n lineJoin : ' round ' , \n - weight : 5 , \n - opacity : 0 . 5 , \n + / / dashArray : null \n \n - / / fill : false , \n - / / fillColor : null , same as color by default \n + / / fill : false \n + / / fillColor : same as color by default \n fillOpacity : 0 . 2 , \n \n / / className : ' '", "msg": "better style defaults for vector features\n"}
{"diff": "a / src / ripgrep - directory - searcher . js \n  b / src / ripgrep - directory - searcher . js \n module . exports = class RipgrepDirectorySearcher { \n args . push ( ' - - no - ignore - vcs ' ) ; \n } \n \n + args . push ( ' . ' ) ; \n + \n const child = spawn ( this . rgPath , args , { \n cwd : directoryPath , \n stdio : [ ' pipe ' , ' pipe ' , ' pipe ' ]", "msg": "Use ' . ' as the directory for ripgrep to scan\n"}
{"diff": "a / tools / fs / files . js \n  b / tools / fs / files . js \n wrapFsFunc ( \" readFile \" , [ 0 ] , { \n wrapFsFunc ( \" stat \" , [ 0 ] ) ; \n wrapFsFunc ( \" lstat \" , [ 0 ] ) ; \n wrapFsFunc ( \" rename \" , [ 0 , 1 ] ) ; \n - wrapFsFunc ( \" move \" , [ 0 ] ) ; \n + wrapFsFunc ( \" move \" , [ 0 , 1 ] ) ; \n \n / / After the outermost files . withCache call returns , the withCacheCache is \n / / reset to null so that it does not survive server restarts .", "msg": "Change ` wrapFsFunc ` for \" move \" to acknowledge _both_ arguments as paths .\n"}
{"diff": "a / src / LiveDevelopment / LiveDevelopment . js \n  b / src / LiveDevelopment / LiveDevelopment . js \n define ( function LiveDevelopment ( require , exports , module ) { \n } \n \n $ ( Inspector . Inspector ) . on ( \" detached \" , _onDetached ) ; \n - \n + $ ( Inspector . Page ) . on ( \" frameNavigated . DOMAgent \" , _onFrameNavigated ) ; \n + \n waitForInterstitialPageLoad ( ) \n . fail ( function ( ) { \n close ( ) ;", "msg": "restore binding for frameNavigated event\n"}
{"diff": "a / tools / compiler - plugin . js \n  b / tools / compiler - plugin . js \n _ . extend ( ResourceSlot . prototype , { \n files . pathJoin ( \n serveRoot , \n / / XXX BBP should we decide in our API that everything is / ? \n - files . convertToStandardPath ( options . path , true ) ) ) \n + files . convertToStandardPath ( options . path , true ) ) ) , \n + / / XXX BBP convertSourceMapPaths ? ? ? \n + sourceMap : options . sourceMap \n } ) ; \n } \n } ) ;", "msg": "CSS source maps for compiler plugins\n"}
{"diff": "a / src / sound / html5 / HTML5AudioSound . js \n  b / src / sound / html5 / HTML5AudioSound . js \n var HTML5AudioSound = new Class ( { \n / / TODO implement pause method \n this . events . dispatch ( new SoundEvent ( this , ' SOUND_PAUSE ' ) ) ; \n return true ; \n + } , \n + resume : function ( ) { \n + if ( ! BaseSound . prototype . resume . call ( this ) ) { \n + return false ; \n + } \n + / / \\ / \\ / \\ / isPlaying = true , isPaused = false \\ / \\ / \\ / \n + / / TODO implement resume method \n + this . events . dispatch ( new SoundEvent ( this , ' SOUND_RESUME ' ) ) ; \n + return true ; \n } \n } ) ; \n module . exports = HTML5AudioSound ;", "msg": "Added resume method implementation that calls super method and dispatches resume event\n"}
{"diff": "a / lib / express / plugins / session . js \n  b / lib / express / plugins / session . js \n exports . Session = Plugin . extend ( { \n * / \n \n init : function ( options ) { \n + this . cookie = { httpOnly : true } \n this . merge ( options | | { } ) \n - this . cookie = this . cookie | | { } \n - this . cookie . httpOnly = true \n this . store = new ( this . dataStore | | exports . Store . Memory ) ( options ) \n this . startReaper ( ) \n } ,", "msg": "Defaulting httpOnly for Session cookies , however overridable\n"}
{"diff": "a / packages / minimongo / projection . js \n  b / packages / minimongo / projection . js \n LocalCollection . _checkSupportedProjection = function ( fields ) { \n _ . each ( fields , function ( val , keyPath ) { \n if ( _ . contains ( keyPath . split ( ' . ' ) , ' $ ' ) ) \n throw MinimongoError ( \" Minimongo doesn ' t support $ operator in projections yet . \" ) ; \n - if ( typeof val = = = ' object ' & & _ . contains ( [ ' $ elemMatch ' , ' $ meta ' , ' $ slice ' ] , _ . keys ( val ) [ 0 ] ) ) \n + if ( typeof val = = = ' object ' & & _ . intersection ( [ ' $ elemMatch ' , ' $ meta ' , ' $ slice ' ] , _ . keys ( val ) ) . length > 0 ) \n throw MinimongoError ( \" Minimongo doesn ' t support operators in projections yet . \" ) ; \n if ( _ . indexOf ( [ 1 , 0 , true , false ] , val ) = = = - 1 ) \n throw MinimongoError ( \" Projection values should be one of 1 , 0 , true , or false \" ) ;", "msg": "Allow for multiple projection operators .\n"}
{"diff": "a / v3 / src / loader / filetypes / AudioFile . js \n  b / v3 / src / loader / filetypes / AudioFile . js \n var AudioFile = new Class ( { \n \n } ) ; \n \n - AudioFile . create = function ( loader , key , urls , config , xhrSettings ) { \n + AudioFile . create = function ( loader , key , urls , config , xhrSettings ) \n + { \n \n var url = AudioFile . findAudioURL ( urls ) ; \n \n AudioFile . findAudioURL = function ( urls ) \n { \n if ( urls . constructor ! = = Array ) \n { \n - urls = [ urls ] ; \n + urls = [ urls ] ; \n } \n \n for ( var i = 0 ; i < urls . length ; i + + ) \n AudioFile . findAudioURL = function ( urls ) \n return url ; \n } \n \n - var audioType = url . match ( / \\ . ( [ ^ \\ . ? ] + ) ( $ | \\ ? ) / ) ; \n + var audioType = url . match ( / \\ . ( [ a - zA - Z0 - 9 ] + ) ( $ | \\ ? ) / ) ; \n \n audioType = GetFastValue ( urls [ i ] , ' type ' , audioType ? audioType [ 1 ] : ' ' ) . toLowerCase ( ) ;", "msg": "using better regex for extracting file extension\n"}
{"diff": "a / core / server / models / post . js \n  b / core / server / models / post . js \n Post = ghostBookshelf . Model . extend ( { \n status : ' draft ' , \n featured : false , \n page : false , \n + type : ' post ' , \n visibility : ' public ' \n } ; \n } ,", "msg": "Added type property to post model defaults\n"}
{"diff": "a / lib / webpack / base . config . js \n  b / lib / webpack / base . config . js \n export default function ( { isClient , isServer } ) { \n ' assets ' : join ( this . srcDir , ' assets ' ) , / / use in template with < img src = \" ~ static / nuxt . png \" / > \n ' ~ assets ' : join ( this . srcDir , ' assets ' ) , \n ' ~ plugins ' : join ( this . srcDir , ' plugins ' ) , \n - ' ~ store ' : join ( this . srcDir , ' store ' ) , \n + ' ~ store ' : join ( this . dir , ' . nuxt / store ' ) , \n ' ~ router ' : join ( this . dir , ' . nuxt / router ' ) , \n ' ~ pages ' : join ( this . srcDir , ' pages ' ) , \n ' ~ components ' : join ( this . srcDir , ' components ' )", "msg": "~ store is now an alias for the store instance\n"}
{"diff": "a / src / git - repository - async . js \n  b / src / git - repository - async . js \n export default class GitRepositoryAsync { \n / / Returns a { Promise } which resolves to a { Boolean } that ' s true if the ` path ` \n / / is ignored . \n isPathIgnored ( _path ) { \n - / / NB : We ' re matching the behavior of ` GitRepository ` here . \n - if ( ! _path ) return Promise . resolve ( false ) \n - \n return this . getRepo ( ) \n . then ( repo = > { \n const relativePath = this . relativize ( _path , repo . workdir ( ) ) \n export default class GitRepositoryAsync { \n / / Returns a { Promise } which resolves to a status { Number } or null if the \n / / path is not in the cache . \n getCachedPathStatus ( _path ) { \n - / / NB : I don ' t love this , but we ' re matching the behavior of \n - / / ` GitRepository ` here for API compatibility . \n - if ( ! _path ) return null \n - \n return this . relativizeToWorkingDirectory ( _path ) \n . then ( relativePath = > this . pathStatusCache [ relativePath ] ) \n }", "msg": "Revert \" Match GitRepository ' s responses to null paths . \"\n"}
{"diff": "a / src / display / fetch_stream . js \n  b / src / display / fetch_stream . js \n function createFetchOptions ( headers , withCredentials ) { \n method : ' GET ' , \n headers , \n mode : ' cors ' , \n - credentials : withCredentials ? ' omit ' : ' include ' , \n + credentials : withCredentials ? ' include ' : ' omit ' , \n redirect : ' follow ' , \n } ; \n }", "msg": "Correctly set the ` credentials ` of a fetch request , when the ` withCredentials ` parameter was passed to ` getDocument `\n"}
{"diff": "a / v3 / src / sound / webaudio / WebAudioSound . js \n  b / v3 / src / sound / webaudio / WebAudioSound . js \n var WebAudioSound = new Class ( { \n return false ; \n } \n this . stopAndRemoveBufferSource ( ) ; \n - this . pausedTime = this . manager . context . currentTime - this . startTime ; \n + this . pausedTime = this . seek ; \n return true ; \n } , \n resume : function ( ) {", "msg": "Setting pausedTime to current seek value\n"}
{"diff": "a / packager / react - packager / src / node - haste / DependencyGraph / ResolutionRequest . js \n  b / packager / react - packager / src / node - haste / DependencyGraph / ResolutionRequest . js \n class ResolutionRequest { \n \n const searchQueue = [ ] ; \n for ( let currDir = path . dirname ( fromModule . path ) ; \n - currDir ! = = realPath . parse ( fromModule . path ) . root ; \n + currDir ! = = ' . ' & & currDir ! = = realPath . parse ( fromModule . path ) . root ; \n currDir = path . dirname ( currDir ) ) { \n const searchPath = path . join ( currDir , ' node_modules ' ) ; \n if ( this . _fastfs . dirExists ( searchPath ) ) {", "msg": "Add support for relative paths to ResolutionRequest\n"}
{"diff": "a / tools / utils . js \n  b / tools / utils . js \n exports . mobileServerForRun = function ( options ) { \n } ; \n } ; \n \n - exports . escapePackageName = function ( packageName ) { \n + exports . escapePackageNameForPath = function ( packageName ) { \n return packageName . replace ( \" : \" , \" _ \" ) ; \n } ; \n \n - exports . unescapePackageName = function ( escapedPackageName ) { \n + exports . unescapePackageNameForPath = function ( escapedPackageName ) { \n return escapedPackageName . replace ( \" _ \" , \" : \" ) ; \n } ;", "msg": "Improve name of escape function for package names\n"}
{"diff": "a / lib / sample - conf . js \n  b / lib / sample - conf . js \n module . exports = function ( DEFAULT_HOME ) { \n INTERACTOR_RPC_PORT : p . join ( PM2_HOME , ' interactor . sock ' ) , \n \n GRACEFUL_TIMEOUT : parseInt ( process . env . PM2_GRACEFUL_TIMEOUT ) | | 8000 , \n + GRACEFUL_LISTEN_TIMEOUT : parseInt ( process . env . PM2_GRACEFUL_LISTEN_TIMEOUT ) | | 4000 , \n \n DEBUG : process . env . PM2_DEBUG | | false , \n WEB_INTERFACE : parseInt ( process . env . PM2_API_PORT ) | | 9615 ,", "msg": "add GRACEFUL_LISTEN_TIMEOUT variable to conf file\n"}
{"diff": "a / spec / async - spec - helpers . js \n  b / spec / async - spec - helpers . js \n export function emitterEventPromise ( emitter , event , timeout = 15000 ) { \n } ) \n } ) \n } \n + \n + export function promisify ( original ) { \n + return function ( . . . args ) { \n + return new Promise ( ( resolve , reject ) = > { \n + args . push ( ( err , . . . results ) = > { \n + if ( err ) { \n + reject ( err ) \n + } else { \n + resolve ( . . . results ) \n + } \n + } ) \n + \n + return original ( . . . args ) \n + } ) \n + } \n + } \n + \n + export function promisifySome ( obj , fnNames ) { \n + const result = { } \n + for ( fnName of fnNames ) { \n + result [ fnName ] = promisify ( obj [ fnName ] ) \n + } \n + return result \n + }", "msg": "Helpers to promisify functions in specs\n"}
{"diff": "a / src / renderers / dom / shared / HTMLDOMPropertyConfig . js \n  b / src / renderers / dom / shared / HTMLDOMPropertyConfig . js \n var HTMLDOMPropertyConfig = { \n crossOrigin : null , \n data : null , / / For ` < object / > ` acts as ` src ` . \n dateTime : MUST_USE_ATTRIBUTE , \n + default : HAS_BOOLEAN_VALUE , \n defer : HAS_BOOLEAN_VALUE , \n dir : null , \n disabled : MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE ,", "msg": "add default attribute for use with track element\n"}
{"diff": "a / packages / rocketchat - lib / server / models / Subscriptions . js \n  b / packages / rocketchat - lib / server / models / Subscriptions . js \n class ModelSubscriptions extends RocketChat . models . _Base { \n rid : room . _id , \n name : room . name , \n fname : room . fname , \n + customFields : room . customFields , \n t : room . t , \n u : { \n _id : user . _id ,", "msg": "Add customFields from Room to Subscription to enable query\n"}
{"diff": "a / web / app . js \n  b / web / app . js \n function webViewerKeyDown ( evt ) { \n handled = true ; \n } \n break ; \n + case 13 : / / enter key \n case 40 : / / down arrow \n case 34 : / / pg down \n case 32 : / / spacebar \n function webViewerKeyDown ( evt ) { \n \n if ( cmd = = = 4 ) { / / shift - key \n switch ( evt . keyCode ) { \n + case 13 : / / enter key \n case 32 : / / spacebar \n if ( ! isViewerInPresentationMode & & \n pdfViewer . currentScaleValue ! = = ' page - fit ' ) {", "msg": "Added enter key functionality for presentation mode\n"}
{"diff": "a / packages / rocketchat - livechat / client / ui . js \n  b / packages / rocketchat - livechat / client / ui . js \n RocketChat . roomTypes . add ( ' l ' , 5 , { \n \n AccountBox . addItem ( { \n name : ' Livechat ' , \n - icon : ' icon - chat - empty ' , \n + icon : ' octicon octicon - info ' , \n href : ' livechat - users ' , \n sideNav : ' livechatFlex ' , \n condition : ( ) = > {", "msg": "changed icon for visitor information tabbar\n"}
{"diff": "a / bin / boilerplates / config / adapters . js \n  b / bin / boilerplates / config / adapters . js \n module . exports . adapters = { \n / / in a model definition , ' default ' will be used . \n ' default ' : ' disk ' , \n \n - / / In - memory adapter for DEVELOPMENT ONLY \n - memory : { \n - module : ' sails - memory ' \n - } , \n - \n / / Persistent adapter for DEVELOPMENT ONLY \n - / / ( data IS preserved when the server shuts down ) \n + / / ( data is preserved when the server shuts down ) \n disk : { \n module : ' sails - disk ' \n } , \n \n / / MySQL is the world ' s most popular relational database . \n / / Learn more : http : / / en . wikipedia . org / wiki / MySQL \n - mysql : { \n + myLocalMySQLDatabase : { \n \n module : ' sails - mysql ' , \n host : ' YOUR_MYSQL_SERVER_HOSTNAME_OR_IP_ADDRESS ' ,", "msg": "Slight improvement to config . adapters boilerplate .\n"}
{"diff": "a / src / core / Core . js \n  b / src / core / Core . js \n class Uppy { \n } ) \n . catch ( ( err ) = > { \n const message = typeof err = = = ' object ' ? err . message : err \n - this . info ( message , ' error ' , 5000 ) \n + this . log ( message ) \n + this . info ( message , ' error ' , 4000 ) \n return Promise . reject ( typeof err = = = ' object ' ? err : new Error ( err ) ) \n } ) \n }", "msg": "add console logging for restrictions error\n"}
{"diff": "a / src / layer / Popup . js \n  b / src / layer / Popup . js \n L . Popup = L . Class . extend ( { \n } \n \n this . _containerWidth = this . _container . offsetWidth ; \n + this . _containerBottom = - this . options . offset . y ; \n + this . _containerLeft = - Math . round ( this . _containerWidth / 2 ) + this . options . offset . x ; \n } , \n \n _updatePosition : function ( ) { \n var pos = this . _map . latLngToLayerPoint ( this . _latlng ) ; \n \n - this . _containerBottom = - pos . y - this . options . offset . y ; \n - this . _containerLeft = pos . x - Math . round ( this . _containerWidth / 2 ) + this . options . offset . x ; \n - \n this . _container . style . bottom = this . _containerBottom + ' px ' ; \n this . _container . style . left = this . _containerLeft + ' px ' ; \n + \n + L . DomUtil . setPosition ( this . _container , pos ) ; \n } , \n \n _adjustPan : function ( ) {", "msg": "Position Popup using L . DomUtil . setPosition for Hardware Accel .\n"}
{"diff": "a / src / FileIndexManager . js \n  b / src / FileIndexManager . js \n \n * / \n \n / * jslint vars : true , plusplus : true , devel : true , browser : true , nomen : true , indent : 4 , maxerr : 50 * / \n - / * global define : false , $ : false , brackets * / \n + / * global define : false , $ : false , brackets , PathUtils * / \n \n / * \n * Manages a collection of FileIndexes where each index maintains a list of information about \n define ( function ( require , exports , module ) { \n \" css \" , \n function ( entry ) { \n var filename = entry . name ; \n - return filename . slice ( filename . length - 4 , filename . length ) = = = \" . css \" ; \n + return PathUtils . filenameExtension ( filename ) ; \n } \n ) ;", "msg": "using PathUtils for file extension\n"}
{"diff": "a / lib / mongoose / types / array . js \n  b / lib / mongoose / types / array . js \n MongooseArray . prototype . __defineGetter__ ( ' _doAtomics ' , function ( ) { \n * / \n \n [ ' push ' , ' unshift ' ] . forEach ( function ( method ) { \n - var oldMethod = Mongoose . prototype [ method ] ; \n + var oldMethod = MongooseArray . prototype [ method ] ; \n \n MongooseArray . prototype [ method ] = function ( ) { \n var ret = oldMethod . apply ( this , arguments ) ;", "msg": "Fixed reference to old method\n"}
{"diff": "a / examples / with - mobx / store . js \n  b / examples / with - mobx / store . js \n class Store { \n } \n \n export function initStore ( isServer , lastUpdate = Date . now ( ) ) { \n - if ( isServer & & typeof window = = = ' undefined ' ) { \n + if ( isServer ) { \n return new Store ( isServer , lastUpdate ) \n } else { \n if ( store = = = null ) {", "msg": "Simplify condition in mobx example ( )\n"}
{"diff": "a / lib / router . js \n  b / lib / router . js \n function reroute ( routePlan , req , res , next ) { \n if ( plan ) plan ( req , res , next ) ; \n else throw new Error ( ' Trying to use unknown middleware : : ' + routePlan ) ; \n } \n + / / Support multiple middleware policies applied in a list \n + else if ( _ . isArray ( routePlan ) ) { \n + require ( ' async ' ) . forEach ( routePlan , function ( item , cb ) { \n + reroute ( item , req , res , function ( req , res , next ) { \n + cb ( ) ; \n + } ) ; \n + } , function ( err ) { \n + if ( err ) sails . log . error ( err ) ; \n + next ( ) ; \n + } ) ; \n + } \n + \n } \n \\ No newline at end of file", "msg": "Added ordered list support for policies / middleware .\n"}
{"diff": "a / lib / build / index . js \n  b / lib / build / index . js \n function getWebpackServerConfig ( ) { \n function createWebpackMiddlewares ( ) { \n const clientConfig = getWebpackClientConfig . call ( this ) \n / / setup on the fly compilation + hot - reload \n - clientConfig . entry . app = [ ' webpack - hot - middleware / client ? reload = true ' , clientConfig . entry . app ] \n + clientConfig . entry . app = _ . flatten ( [ ' webpack - hot - middleware / client ? reload = true ' , clientConfig . entry . app ] ) \n clientConfig . plugins . push ( \n new webpack . HotModuleReplacementPlugin ( ) , \n new webpack . NoErrorsPlugin ( )", "msg": "flatten entry app to avoid build error\n"}
{"diff": "a / website / src / react - native / showcase . js \n  b / website / src / react - native / showcase . js \n var apps = [ \n author : ' CANDDi LTD . ' , \n } , \n { \n - name : ' CBS Sports Franchise Football ' , \n + name : ' CaratLane ' , \n icon : ' http : / / a2 . mzstatic . com / us / r30 / Purple69 / v4 / 7b / 0c / a0 / 7b0ca007 - 885a - 7cfc - 9fa2 - 2ec4394c2ecc / icon175x175 . png ' , \n + link : ' https : / / play . google . com / store / apps / details ? id = com . caratlane . android & hl = en ' , \n + author : ' CaratLane ' , \n + } , \n + { \n + name : ' CBS Sports Franchise Football ' , \n + icon : ' https : / / lh3 . googleusercontent . com / wEN - Vvpbnw_n89dbXPxWkNnXB7sALKBKvpX_hbzrWbuC4tFi5tVkWHq8k5TAvdbf5UQ = w300 - rw ' , \n link : ' https : / / play . google . com / store / apps / details ? id = com . cbssports . fantasy . franchisefootball2015 ' , \n author : ' CBS Sports ' , \n } ,", "msg": "Adding CaratLane app to react - native showcase\n"}
{"diff": "a / src / diff / props . js \n  b / src / diff / props . js \n export function diffProps ( dom , newProps , oldProps , isSvg , hydrate ) { \n i ! = = ' key ' & & \n i ! = = ' value ' & & \n i ! = = ' checked ' & & \n - oldProps [ i ] ! = = newProps [ i ] \n + oldProps [ i ] ! = newProps [ i ] \n ) { \n setProperty ( dom , i , newProps [ i ] , oldProps [ i ] , isSvg ) ; \n }", "msg": "use loose equality for prop comparison\n"}
{"diff": "a / core / server / data / importer / importers / data / settings . js \n  b / core / server / data / importer / importers / data / settings . js \n class SettingsImporter extends BaseImporter { \n if ( obj . key = = = ' slack ' ) { \n obj . value = JSON . stringify ( [ { url : ' ' } ] ) ; \n } \n + \n + / / CASE : export files might contain \" 0 \" or \" 1 \" for booleans \n + / / transform \" 0 \" to false \n + / / transform \" false \" to false \n + / / transform \" null \" to null \n + if ( obj . value = = = ' 0 ' | | obj . value = = = ' 1 ' ) { \n + obj . value = ! ! + obj . value ; \n + } \n } ) ; \n \n return super . beforeImport ( ) ;", "msg": "\ud83d\udc1b Fixed private blogging getting enabled after import\n"}
{"diff": "a / backbone . js \n  b / backbone . js \n \n / / Proxy to _ ' s chain . Can ' t be proxied the same way the rest of the \n / / underscore methods are proxied because it relies on the underscore \n / / constructor . \n - chain : function ( ) { \n + chain : function ( ) { \n return _ ( this . models ) . chain ( ) ; \n } , \n \n \n } ) ; \n \n / / The self - propagating extend function that Backbone classes use . \n - var extend = function ( protoProps , classProps ) { \n + var extend = function ( protoProps , classProps ) { \n var child = inherits ( this , protoProps , classProps ) ; \n child . extend = this . extend ; \n return child ;", "msg": "Whitespace cleanup for extend Collection . prototype . chain function definitions .\n"}
{"diff": "a / lodash . js \n  b / lodash . js \n \n thisArg = newData [ 2 ] ; \n partials = newData [ 3 ] ; \n holders = newData [ 4 ] ; \n - arity = newData [ 9 ] = newData [ 9 ] = = null \n + arity = newData [ 9 ] = newData [ 9 ] = = = undefined \n ? ( isBindKey ? 0 : func . length ) \n : nativeMax ( newData [ 9 ] - length , 0 ) ;", "msg": "Use a strict ` undefined ` check for ` arity ` in ` createWrap ` .\n"}
{"diff": "a / lodash . js \n  b / lodash . js \n \n * \n * @ static \n * @ memberOf _ \n + * @ type Function \n * @ category Objects \n * @ param { Mixed } value The value to check . \n * @ returns { Boolean } Returns ` true ` , if the ` value ` is an array , else ` false ` .", "msg": "Add @ type to ` _ . isArray ` , required for modern builds .\n"}
{"diff": "a / src / physics / p2 / Body . js \n  b / src / physics / p2 / Body . js \n Phaser . Physics . P2 . Body . prototype = { \n adjustCenterOfMass : function ( ) { \n \n this . data . adjustCenterOfMass ( ) ; \n + this . shapeChanged ( ) ; \n \n } ,", "msg": "calling adjust mass desyncs the debug graphics from the real positions of bodies\n"}
{"diff": "a / packages / ddp - client / server / stream_client_nodejs . js \n  b / packages / ddp - client / server / stream_client_nodejs . js \n export default class ClientStream extends StreamClientCommon { \n headers : this . headers , \n extensions : [ deflate ] \n } ; \n - fayeOptions = { . . . fayeOptions , . . . this . npmFayeOptions } ; \n + fayeOptions = Object . assign ( fayeOptions , this . npmFayeOptions ) ; \n var proxyUrl = this . _getProxyUrl ( targetUrl ) ; \n if ( proxyUrl ) { \n fayeOptions . proxy = { origin : proxyUrl } ;", "msg": "Use assign to avoid an extra object copy\n"}
{"diff": "a / src / display / svg . js \n  b / src / display / svg . js \n SVGGraphics = ( function SVGGraphicsClosure ( ) { \n case OPS . beginText : \n this . beginText ( ) ; \n break ; \n + case OPS . dependency : \n + / / Handled in loadDependencies , warning should not be thrown \n + break ; \n case OPS . setLeading : \n this . setLeading ( args ) ; \n break ;", "msg": "Prevent warning on unimplemented operator thrown for OPS . dependency\n"}
{"diff": "a / vendor / jasmine - jquery . js \n  b / vendor / jasmine - jquery . js \n var jQueryMatchers = { \n } \n } , \n \n - toContain : function ( selector ) { \n + toContain : function ( contained ) { \n if ( this . actual instanceof HTMLElement ) { \n - return ! ! this . actual . querySelector ( selector ) \n + if ( typeof contained = = = ' string ' ) { \n + return this . actual . querySelector ( contained ) \n + } else { \n + return this . actual . contains ( contained ) \n + } \n } else { \n - return this . actual . find ( selector ) . size ( ) > 0 \n + return this . actual . find ( contained ) . size ( ) > 0 \n } \n } ,", "msg": "Allow elements to be passed to toContain matcher\n"}
{"diff": "a / lib / transports / websocket . js \n  b / lib / transports / websocket . js \n WebSocket . prototype . write = function ( data ) { \n this . buffered . push ( data ) ; \n return this ; \n } \n + \n + var length = Buffer . byteLength ( data ) \n + , buffer = new Buffer ( 2 + length ) ; \n + \n + buffer . write ( ' \\ u0000 ' , ' binary ' ) ; \n + buffer . write ( data , 1 , ' utf8 ' ) ; \n + buffer . write ( ' \\ uffff ' , 1 + length , ' binary ' ) ; \n \n try { \n - this . socket . write ( ' \\ u0000 ' , ' binary ' ) ; \n - this . socket . write ( data , ' utf8 ' ) ; \n - this . socket . write ( ' \\ uffff ' , ' binary ' ) ; \n + if ( this . socket . write ( buffer ) ) { \n + this . drained = true ; \n + } \n } catch ( e ) { \n this . end ( ) ; \n } \n + \n + this . log . debug ( ' websocket writing ' , data ) ; \n } \n } ;", "msg": "Added optimization to write one buffer .\n"}
{"diff": "a / Libraries / polyfills / console . js \n  b / Libraries / polyfills / console . js \n if ( global . nativeLoggingHook ) { \n } ; \n } \n } ) ; \n + \n + / / The following methods are not supported by this polyfill but \n + / / we still should pass them to original console if they are \n + / / supported by it . \n + [ \n + ' assert ' , \n + ' clear ' , \n + ' dir ' , \n + ' dirxml ' , \n + ' groupCollapsed ' , \n + ' profile ' , \n + ' profileEnd ' , \n + ] . forEach ( methodName = > { \n + if ( typeof originalConsole [ methodName ] = = = ' function ' ) { \n + console [ methodName ] = function ( ) { \n + originalConsole [ methodName ] ( . . . arguments ) ; \n + } ; \n + } \n + } ) ; \n } \n } else if ( ! global . console ) { \n const log = global . print | | function consoleLoggingStub ( ) { } ;", "msg": "console polyfill : pass unsupported messages to original console\n"}
{"diff": "a / lib / plugins / filter / post_permalink . js \n  b / lib / plugins / filter / post_permalink . js \n function postPermalinkFilter ( data ) { \n year : data . date . format ( ' YYYY ' ) , \n month : data . date . format ( ' MM ' ) , \n day : data . date . format ( ' DD ' ) , \n + hour : data . date . format ( ' HH ' ) , \n + minute : data . date . format ( ' mm ' ) , \n i_month : data . date . format ( ' M ' ) , \n i_day : data . date . format ( ' D ' ) \n } ;", "msg": "Add hour and minute for the post permalink .\n"}
{"diff": "a / v3 / src / sound / BaseSound . js \n  b / v3 / src / sound / BaseSound . js \n var BaseSound = new Class ( { \n * / \n this . currentConfig = this . config ; \n / * * \n - * [ description ] \n + * Boolean indicating whether the sound is muted or not . \n + * Gets or sets the muted state of this sound . \n * \n * @ property { boolean } mute \n * /", "msg": "Updated description for mute property\n"}
{"diff": "a / test / test . js \n  b / test / test . js \n \n \n lodashStable . each ( [ ' values ' , ' valuesIn ' ] , function ( methodName ) { \n var args = ( function ( ) { return arguments ; } ( 1 , 2 , 3 ) ) , \n + strictArgs = ( function ( ) { ' use strict ' ; return arguments ; } ( 1 , 2 , 3 ) ) , \n func = _ [ methodName ] , \n isValues = methodName = = ' values ' ; \n \n \n \n assert . deepEqual ( actual , expected ) ; \n } ) ; \n + \n + QUnit . test ( ' ` _ . ' + methodName + ' ` should work with ` arguments ` objects ' , function ( assert ) { \n + assert . expect ( 1 ) ; \n + \n + var values = [ args , strictArgs ] , \n + expected = lodashStable . map ( values , lodashStable . constant ( [ 1 , 2 , 3 ] ) ) ; \n + \n + var actual = lodashStable . map ( values , function ( value ) { \n + return func ( value ) . sort ( ) ; \n + } ) ; \n + \n + assert . deepEqual ( actual , expected ) ; \n + } ) ; \n } ) ; \n \n / * mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm - - * /", "msg": "Add arguments object test for values methods .\n"}
{"diff": "a / lib / schema . js \n  b / lib / schema . js \n Schema . prototype . clone = function ( ) { \n s . methods = utils . clone ( this . methods ) ; \n s . statics = utils . clone ( this . statics ) ; \n s . _plugins = utils . clone ( this . _plugins ) ; \n + s . _indexes = utils . clone ( this . _indexes ) ; \n s . s . hooks = this . s . hooks . clone ( ) ; \n return s ; \n } ;", "msg": "Update clone method to include indexes\n"}
{"diff": "a / tools / compiler . js \n  b / tools / compiler . js \n var compileUnibuild = function ( unipkg , inputSourceArch , packageLoader , \n source : options . data , \n sourcePath : options . sourcePath , \n servePath : path . join ( inputSourceArch . pkg . serveRoot , options . path ) , \n - bare : ! ! options . bare , \n + bare : ! ! fileOptions . bare , \n sourceMap : options . sourceMap \n } ) ; \n } ,", "msg": "Pass through ' bare ' option to compiled js source files\n"}
{"diff": "a / packages / ember - states / lib / state_manager . js \n  b / packages / ember - states / lib / state_manager . js \n Ember . StateManager = Ember . State . extend ( \n \n var action = currentState [ event ] ; \n \n - if ( action ) { \n + / / Test to see if the action is a method that \n + / / can be invoked . Don ' t blindly check just for \n + / / existence , because it is possible the state \n + / / manager has a child state of the given name , \n + / / and we should still raise an exception in that \n + / / case . \n + if ( typeof action = = = ' function ' ) { \n if ( log ) { console . log ( fmt ( \" STATEMANAGER : Sending event ' % @ ' to state % @ . \" , [ event , get ( currentState , ' path ' ) ] ) ) ; } \n action . call ( currentState , this , context ) ; \n } else {", "msg": "Improve error when sending an unimplemented event\n"}
{"diff": "a / test / test . js \n  b / test / test . js \n \n asyncTest ( ' _ . ' + methodName + ' supports recursive calls ' , 2 , function ( ) { \n if ( ! ( isRhino & & isModularize ) ) { \n var actual = [ ] , \n - args = _ . map ( [ ' a ' , ' b ' , ' c ' ] , function ( chr ) { return [ { ' a ' : 1 } , chr ] ; } ) , \n + args = _ . map ( [ ' a ' , ' b ' , ' c ' ] , function ( chr ) { return [ { } , chr ] ; } ) , \n expected = args . slice ( ) , \n queue = args . slice ( ) ; \n \n \n if ( next ) { \n funced . call ( next [ 0 ] , next [ 1 ] ) ; \n } \n - } , 64 ) ; \n + } , 32 ) ; \n \n var next = queue . shift ( ) ; \n funced . call ( next [ 0 ] , next [ 1 ] ) ; \n deepEqual ( actual , expected . slice ( 0 , isDebounce ? 0 : 1 ) ) ; \n \n setTimeout ( function ( ) { \n - deepEqual ( actual , expected . slice ( 0 , isDebounce ? 2 : 3 ) ) ; \n + deepEqual ( actual , expected . slice ( 0 , actual . length ) ) ; \n QUnit . start ( ) ; \n - } , 192 ) ; \n + } , 256 ) ; \n } \n else { \n skipTest ( 2 ) ;", "msg": "Adjust recursive test for older VMs .\n"}
{"diff": "a / lib / intermediate - representation - dir / production - app . js \n  b / lib / intermediate - representation - dir / production - app . js \n runtime . install ( { \n const rootElement = document . getElementById ( ` react - mount ` ) \n const rootRoute = require ( ` . / split - child - routes ` ) \n \n + / / If you try to load the split - child - routes module in other \n + / / modules , Webpack freezes in some sort of infinite loop when \n + / / you try to build the javascript for production . No idea \n + / / why . . . so for now we ' ll pop the routes on window . I hope no \n + / / one feels overly dirty from reading this ; - ) \n + if ( typeof window ! = = ' undefined ' ) { \n + window . gatsbyRootRoute = rootRoute \n + } \n + \n let currentLocation \n browserHistory . listen ( location = > { \n currentLocation = location", "msg": "Make routes module available to other modules\n"}
{"diff": "a / lib / router . js \n  b / lib / router . js \n function processExpressRequest ( controllerName , actionName ) { \n \n / / Apply view middleware \n _ . each ( viewMiddleware , function ( middleware ) { \n - middleware ( res ) ; \n + middleware ( config , res ) ; \n } ) ;", "msg": "Passed in config to view middleware .\n"}
{"diff": "a / src / map / Map . js \n  b / src / map / Map . js \n L . Map = L . Evented . extend ( { \n getSize : function ( ) { \n if ( ! this . _size | | this . _sizeChanged ) { \n this . _size = new L . Point ( \n - this . _container . clientWidth , \n - this . _container . clientHeight ) ; \n + this . _container . clientWidth | | 0 , \n + this . _container . clientHeight | | 0 ) ; \n \n this . _sizeChanged = false ; \n }", "msg": "adds graceful fallback to clientWidth & clinetHeight in getSize ( )\n"}
{"diff": "a / test / schematype . test . js \n  b / test / schematype . test . js \n describe ( ' schematype ' , function ( ) { \n const schema = new mongoose . Schema ( { test : type } ) ; \n \n / / Assert \n - assert . equal ( schema . path ( ' test ' ) . options . required , true ) ; \n + assert . equal ( schema . path ( ' test ' ) . options . someRandomOption , true ) ; \n } ) ; \n } ) ; \n } ) ;", "msg": "Use a fake option for testing\n"}
{"diff": "a / packages / absolute - url / package . js \n  b / packages / absolute - url / package . js \n \n Package . describe ( { \n - summary : \" DEPRECATED : Generate absolute URLs pointing to the application \" \n + summary : \" DEPRECATED : Generate absolute URLs pointing to the application \" , \n + internal : true \n } ) ; \n \n Package . on_use ( function ( api ) { \n console . log ( ' DEPRECATED . The ` absolute - url ` package has been folded into ' \n - + ' the ` meteor ` package and should not be used directly . ' ) ; \n + + ' the ` meteor ` package and should not be used directly . Run ' \n + + ' ` meteor remove absolute - url ` to resolve this . ' ) ; \n } ) ;", "msg": "Minor changes to deprecated absolute - url package based on code review comments\n"}
{"diff": "a / hooks / src / index . js \n  b / hooks / src / index . js \n function scheduleFlushAfterPaint ( ) { \n setTimeout ( flushAfterPaintEffects , 0 ) ; \n } \n \n - export function act ( cb ) { \n + export function setupRerender ( ) { \n Component . __test__previousDebounce = options . debounceRendering ; \n options . debounceRendering = cb = > Component . __test__drainQueue = cb ; \n + \n + return ( ) = > Component . __test__drainQueue & & Component . __test__drainQueue ( ) ; \n + } \n + \n + export function act ( cb ) { \n + const rerender = setupRerender ( ) ; \n options . afterPaint = ( fc ) = > fc ( ) ; \n cb ( ) ; \n + rerender ( ) ; \n + options . afterPaint = undefined ; \n } \n \n if ( typeof window ! = = ' undefined ' ) {", "msg": "use rerender from exissting test package\n"}
{"diff": "a / jquery . fullPage . js \n  b / jquery . fullPage . js \n \n loopTop : false , \n loopHorizontal : true , \n continuousVertical : false , \n - continuousHorizontal : true , \n + continuousHorizontal : false , \n scrollHorizontally : false , \n interlockedSlides : false , \n resetSliders : false , \n \n extensions . forEach ( function ( extension ) { \n / / is the option set to true ? \n if ( options [ extension ] ) { \n - showError ( ' warn ' , ' fullpage . js extensions require jquery . fullpage . extensions . min . js file instead of the usual jquery . fullpage . js ' ) ; \n + showError ( ' warn ' , ' fullpage . js extensions require jquery . fullpage . extensions . min . js file instead of the usual jquery . fullpage . js . Requested : ' + extension ) ; \n } \n } ) ;", "msg": "continuousHorizontal default set to false . Extension warning made clearer .\n"}
{"diff": "a / packages / rocketchat - file - upload / lib / FileUpload . js \n  b / packages / rocketchat - file - upload / lib / FileUpload . js \n FileUpload = { \n return false ; \n } \n \n - if ( file . size > maxFileSize ) { \n - const reason = TAPi18n . __ ( ' File_exceeds_allowed_size_of_bytes ' , { \n - size : filesize ( maxFileSize ) \n - } , user . language ) ; \n - throw new Meteor . Error ( ' error - file - too - large ' , reason ) ; \n + if ( maxFileSize ! = = - 1 ) { \n + if ( file . size > maxFileSize ) { \n + const reason = TAPi18n . __ ( ' File_exceeds_allowed_size_of_bytes ' , { \n + size : filesize ( maxFileSize ) \n + } , user . language ) ; \n + throw new Meteor . Error ( ' error - file - too - large ' , reason ) ; \n + } \n } \n \n if ( ! RocketChat . fileUploadIsValidContentType ( file . type ) ) {", "msg": "added option to remove the filesize restriction\n"}
{"diff": "a / Libraries / PushNotificationIOS / PushNotificationIOS . js \n  b / Libraries / PushNotificationIOS / PushNotificationIOS . js \n const DEVICE_LOCAL_NOTIF_EVENT = ' localNotificationReceived ' ; \n * { \n * [ RCTPushNotificationManager didReceiveLocalNotification : notification ] ; \n * } \n + * - ( void ) application : ( UIApplication * ) application didFailToRegisterForRemoteNotificationsWithError : ( NSError * ) error \n + * { \n + * NSLog ( @ \" % @ \" , error ) ; \n + * } \n * ` ` ` \n * / \n class PushNotificationIOS {", "msg": "Added logging to push registration failure .\n"}
{"diff": "a / tools / commands - cordova . js \n  b / tools / commands - cordova . js \n var installPlugin = function ( cordovaPath , name , version , conf ) { \n \n _ . each ( conf | | { } , function ( value , variable ) { \n additionalArgs . push ( ' - - variable ' ) ; \n - additionalArgs . push ( variable + ' = ' + JSON . stringify ( value ) ) ; \n + additionalArgs . push ( variable + ' = \\ ' ' + value + ' \\ ' ' ) ; \n } ) ; \n \n var execRes = execFileSyncOrThrow ( localCordova ,", "msg": "Properly escape command line arguments for cordova plugins\n"}
{"diff": "a / app / models / server / models / Users . js \n  b / app / models / server / models / Users . js \n export class Users extends Base { \n this . tryEnsureIndex ( { statusText : 1 } ) ; \n this . tryEnsureIndex ( { active : 1 } , { sparse : 1 } ) ; \n this . tryEnsureIndex ( { statusConnection : 1 } , { sparse : 1 } ) ; \n + this . tryEnsureIndex ( { appId : 1 } , { sparse : 1 } ) ; \n this . tryEnsureIndex ( { type : 1 } ) ; \n this . tryEnsureIndex ( { ' visitorEmails . address ' : 1 } ) ; \n this . tryEnsureIndex ( { federation : 1 } , { sparse : true } ) ;", "msg": "Add User \u2019 s index for field ` appId ` ( )\n"}
{"diff": "a / lib / main / build - site . js \n  b / lib / main / build - site . js \n function tidyHighlights ( $ ) { \n } ) ; \n / / Collapse nested highlights . \n _ . each ( [ ' comment ' , ' string ' ] , cls = > { \n - $ parent . find ( ` [ class ~ = \" $ { cls } \" ] > [ class ~ = \" $ { cls } \" ] ` ) . each ( function ( ) { \n - const $ parent = $ ( this ) . parent ( ) ; \n - $ parent . text ( $ parent . text ( ) ) ; \n + $ parent . find ( ` [ class ~ = \" $ { cls } \" ] ` ) . each ( function ( ) { \n + const $ element = $ ( this ) ; \n + $ element . text ( $ element . text ( ) ) ; \n } ) ; \n } ) ; \n / / Collapse nested spans .", "msg": "Simplify nested highlights selector .\n"}
{"diff": "a / build / pre - compile . js \n  b / build / pre - compile . js \n \n ' bind ' , \n ' bindAll ' , \n ' chain ' , \n - ' clearTimeout ' , \n ' clone ' , \n ' collect ' , \n ' compact ' , \n \n ' rest ' , \n ' result ' , \n ' select ' , \n - ' setTimeout ' , \n ' shuffle ' , \n ' size ' , \n ' some ' ,", "msg": "Remove ` clearTimeout ` and ` setTimeout ` from the list of properties to escape in pre - compile . js .\n"}
{"diff": "a / src / extensions / default / JavaScriptCodeHints / main . js \n  b / src / extensions / default / JavaScriptCodeHints / main . js \n define ( function ( require , exports , module ) { \n scopeResponse . promise . done ( function ( ) { \n cachedLine = cursor . line ; \n cachedType = session . getType ( ) ; \n - matcher = new StringMatch . StringMatcher ( ) ; \n + matcher = new StringMatch . StringMatcher ( { \n + preferPrefixMatches : true \n + } ) ; \n cachedHints = session . getHints ( query , matcher ) ; \n \n if ( $ deferredHints . state ( ) = = = \" pending \" ) {", "msg": "Turn on preferPrefixMatches for JS code hints .\n"}
{"diff": "a / tools / isobuild / package - source . js \n  b / tools / isobuild / package - source . js \n _ . extend ( PackageSource . prototype , { \n * @ param { String } options . documentation Optional Filepath to \n * documentation . Set to ' README . md ' by default . Set this to null to submit \n * no documentation . \n + * @ param { String } options . debugOnly A package with this flag set to true \n + * will not be bundled into production builds . This is useful for packages \n + * meant to be used in development only . \n * / \n describe : function ( options ) { \n _ . each ( options , function ( value , key ) {", "msg": "Document debugOnly option for Package . describe .\n"}
{"diff": "a / packages / @ uppy / provider - views / src / index . js \n  b / packages / @ uppy / provider - views / src / index . js \n module . exports = class ProviderView { \n res . items . forEach ( ( item ) = > { \n if ( ! item . isFolder ) { \n files . push ( item ) \n + } else { \n + this . addFolder ( item ) \n } \n } ) \n const moreFiles = res . nextPagePath | | null", "msg": "Add support for uploading nested folders ( )\n"}
{"diff": "a / js / reveal . js \n  b / js / reveal . js \n var Reveal = ( function ( ) { \n / / instead of checking contentEditable ? \n \n if ( event . target . contentEditable = = = ' inherit ' ) { \n - if ( event . keyCode > = 37 & & event . keyCode < = 40 ) { \n + if ( event . keyCode > = 33 & & event . keyCode < = 40 ) { \n \n switch ( event . keyCode ) { \n + case 33 : navigateLeft ( ) ; break ; / / left for wireless presenter \n + case 34 : navigateRight ( ) ; break ; / / right for wireless presenter \n case 37 : navigateLeft ( ) ; break ; / / left \n case 39 : navigateRight ( ) ; break ; / / right \n case 38 : navigateUp ( ) ; break ; / / up", "msg": "added support for wireless presenter\n"}
{"diff": "a / lib / codemirror . js \n  b / lib / codemirror . js \n var CodeMirror = ( function ( ) { \n doc . iter ( from . line , to . line , function ( line ) { \n if ( line . text . length = = maxLineLength ) { recomputeMaxLength = true ; return true ; } \n } ) ; \n + if ( from . line ! = to . line | | newText . length > 1 ) gutterDirty = true ; \n \n var nlines = to . line - from . line , firstLine = getLine ( from . line ) , lastLine = getLine ( to . line ) ; \n / / First adjust the line structure , taking some care to leave highlighting intact .", "msg": "Always refresh the gutter when a change was made that crosses line bounds\n"}
{"diff": "a / tools / cli / dev - bundle - links . js \n  b / tools / cli / dev - bundle - links . js \n exports . makeLink = function ( target , linkPath ) { \n fs . writeFileSync ( tempPath , target , \" utf8 \" ) ; \n } \n \n - fs . renameSync ( tempPath , linkPath ) ; \n + try { \n + fs . renameSync ( tempPath , linkPath ) ; \n + } catch ( e ) { \n + / / If renaming fails , try unlinking first . \n + fs . unlinkSync ( linkPath ) ; \n + fs . renameSync ( tempPath , linkPath ) ; \n + } \n } ; \n \n exports . readLink = function ( linkPath ) {", "msg": "Try harder to create . meteor / dev_bundle symlink .\n"}
{"diff": "a / lib / mongoose / schema / index . js \n  b / lib / mongoose / schema / index . js \n \n \n / * * \n * Module exports . \n - * \n * / \n \n - exports . object = require ( ' . / object ' ) ; \n - exports . string = require ( ' . / string ' ) ; \n - exports . number = require ( ' . / number ' ) ; \n - exports . array = require ( ' . / array ' ) ; \n - exports . oid = require ( ' . / objectid ' ) ; \n - exports . email = require ( ' . / email ' ) ; \n - exports . document = require ( ' . / document ' ) ; \n + exports . Object = require ( ' . / object ' ) ; \n + exports . String = require ( ' . / string ' ) ; \n + exports . Number = require ( ' . / number ' ) ; \n + exports . Array = require ( ' . / array ' ) ; \n + exports . ObjectId = require ( ' . / objectid ' ) ; \n + exports . DocumentArray = require ( ' . / documentarray ' ) ;", "msg": "Fixed exports for / schema / namespace\n"}
{"diff": "a / src / layer / marker / Marker . js \n  b / src / layer / marker / Marker . js \n L . Marker = L . Class . extend ( { \n this . update ( ) ; \n } \n \n + if ( this . _popup ) { \n + this . bindPopup ( this . _popup ) ; \n + } \n + \n return this ; \n } ,", "msg": "rebind popup when using setIcon to ensure proper popup anchor placement\n"}
{"diff": "a / packages / ember - views / lib / attr_nodes / legacy_bind . js \n  b / packages / ember - views / lib / attr_nodes / legacy_bind . js \n import AttrNode from \" . / attr_node \" ; \n import { fmt } from \" ember - runtime / system / string \" ; \n import { typeOf } from \" ember - metal / utils \" ; \n import { read } from \" ember - metal / streams / utils \" ; \n + import create from ' ember - metal / platform / create ' ; \n \n function LegacyBindAttrNode ( attrName , attrValue ) { \n this . init ( attrName , attrValue ) ; \n } \n \n - LegacyBindAttrNode . prototype = AttrNode . prototype ; \n + LegacyBindAttrNode . prototype = create ( AttrNode . prototype ) ; \n \n LegacyBindAttrNode . prototype . render = function render ( buffer ) { \n this . isDirty = false ;", "msg": "[ BUGFIX beta ] proto inherit for LegacyBindAttrNode missing Object . create\n"}
{"diff": "a / src / constructors / injectGlobal . js \n  b / src / constructors / injectGlobal . js \n let warnInjectGlobalDeprecated \n if ( process . env . NODE_ENV ! = = ' production ' ) { \n warnInjectGlobalDeprecated = once ( ( ) = > { \n / / eslint - disable - next - line no - console \n - console . error ( \n + console . warn ( \n ' Notice : The \" injectGlobal \" API will be removed in the upcoming v4 . 0 release . Use \" createGlobalStyle \" instead . You can find more information here : https : / / github . com / styled - components / styled - components / issues / 1333 ' \n ) \n } )", "msg": "Tone down dev warning for deprecated injectGlobal\n"}
{"diff": "a / core / client / Brocfile . js \n  b / core / client / Brocfile . js \n app = new EmberApp ( { \n source : ' . / app / styles / app . css ' , \n inputFile : ' app . css ' , \n browsers : ' last 2 versions ' , \n - outputFile : ' ghost . css ' \n + outputFile : isProduction ? ' ghost . min . css ' : ' ghost . css ' \n } , \n hinting : false , \n fingerprint : disabled", "msg": "Use ` ghost . min . css ` when building for production .\n"}
{"diff": "a / js / reveal . js \n  b / js / reveal . js \n \n \n / / HTML5 media elements \n toArray ( slide . querySelectorAll ( ' video , audio ' ) ) . forEach ( function ( el ) { \n - if ( el . hasAttribute ( ' data - autoplay ' ) & & typeof el . play = = = ' function ' ) { \n + if ( ( el . hasAttribute ( ' data - autoplay ' ) | | el . hasAttribute ( ' data - paused - by - reveal ' ) ) & & typeof el . play = = = ' function ' ) { \n + el . removeAttribute ( ' data - paused - by - reveal ' ) ; \n el . play ( ) ; \n } \n } ) ; \n \n / / HTML5 media elements \n toArray ( slide . querySelectorAll ( ' video , audio ' ) ) . forEach ( function ( el ) { \n if ( ! el . hasAttribute ( ' data - ignore ' ) & & typeof el . pause = = = ' function ' ) { \n + el . addAttribute ( ' data - paused - by - reveal ' ) ; \n el . pause ( ) ; \n } \n } ) ;", "msg": ", resume playback for paused media .\n"}
